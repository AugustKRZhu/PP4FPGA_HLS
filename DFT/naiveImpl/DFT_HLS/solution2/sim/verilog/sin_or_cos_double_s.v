// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sin_or_cos_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_in,
        do_cos,
        ap_return
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] t_in;
input   do_cos;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_4_address0;
reg    fourth_order_double_4_ce0;
wire   [58:0] fourth_order_double_4_q0;
wire   [7:0] fourth_order_double_5_address0;
reg    fourth_order_double_5_ce0;
wire   [51:0] fourth_order_double_5_q0;
wire   [7:0] fourth_order_double_6_address0;
reg    fourth_order_double_6_ce0;
wire   [43:0] fourth_order_double_6_q0;
wire   [7:0] fourth_order_double_7_address0;
reg    fourth_order_double_7_ce0;
wire   [32:0] fourth_order_double_7_q0;
wire   [7:0] fourth_order_double_s_address0;
reg    fourth_order_double_s_ce0;
wire   [24:0] fourth_order_double_s_q0;
reg   [0:0] p_Result_19_reg_1102;
wire   [10:0] loc_V_fu_286_p4;
reg   [10:0] loc_V_reg_1108;
wire   [51:0] loc_V_1_fu_296_p1;
reg   [51:0] loc_V_1_reg_1115;
wire   [0:0] closepath_fu_300_p2;
reg   [0:0] closepath_reg_1121;
wire   [6:0] tmp_13_fu_335_p1;
reg   [6:0] tmp_13_reg_1132;
reg   [169:0] ret_V_reg_1137;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_7_fu_378_p2;
reg   [0:0] tmp_7_reg_1152;
reg   [123:0] p_Val2_8_reg_1158;
wire    ap_CS_fsm_state7;
reg   [2:0] tmp_14_i_reg_1164;
wire   [2:0] p_Val2_29_fu_403_p3;
reg   [2:0] p_Val2_29_reg_1169;
wire    ap_CS_fsm_state8;
wire   [123:0] p_Val2_11_fu_418_p3;
reg   [123:0] p_Val2_11_reg_1175;
reg   [60:0] p_Result_i2_i_reg_1180;
reg   [62:0] Mx_V_reg_1185;
wire    ap_CS_fsm_state9;
wire  signed [10:0] Ex_V_fu_507_p2;
reg  signed [10:0] Ex_V_reg_1192;
reg   [0:0] isNeg_reg_1198;
wire   [0:0] tmp_6_fu_521_p2;
reg   [0:0] tmp_6_reg_1204;
wire   [0:0] tmp_8_fu_526_p2;
reg   [0:0] tmp_8_reg_1210;
reg   [6:0] p_Result_i_reg_1218;
wire    ap_CS_fsm_state10;
wire   [55:0] p_Val2_15_fu_582_p1;
reg   [55:0] p_Val2_15_reg_1223;
reg   [48:0] tmp_i1_reg_1228;
wire    ap_CS_fsm_state11;
wire   [0:0] tmp_fu_596_p10;
reg   [0:0] tmp_reg_1239;
wire   [97:0] OP1_V_fu_617_p1;
reg   [97:0] OP1_V_reg_1245;
wire   [0:0] not_do_cos_i_fu_626_p2;
reg   [0:0] not_do_cos_i_reg_1252;
wire   [63:0] tmp_30_i_fu_645_p1;
reg   [63:0] tmp_30_i_reg_1257;
reg   [48:0] tmp_25_i_reg_1274;
wire    ap_CS_fsm_state12;
reg  signed [51:0] fourth_order_double_10_reg_1280;
reg  signed [43:0] fourth_order_double_12_reg_1285;
wire   [97:0] OP2_V_fu_661_p1;
wire    ap_CS_fsm_state13;
reg   [41:0] tmp_27_i_reg_1332;
wire    ap_CS_fsm_state14;
reg   [34:0] tmp_29_i_reg_1337;
reg   [58:0] p_Val2_19_reg_1342;
reg   [55:0] tmp_12_i_reg_1347;
reg   [47:0] tmp_14_i1_reg_1352;
reg   [32:0] fourth_order_double_14_reg_1357;
reg   [24:0] fourth_order_double_16_reg_1362;
wire    ap_CS_fsm_state15;
reg   [28:0] tmp_2_reg_1377;
wire   [63:0] p_Val2_22_fu_796_p2;
reg   [63:0] p_Val2_22_reg_1382;
reg   [36:0] tmp_1_reg_1387;
wire    ap_CS_fsm_state16;
wire   [0:0] cos_basis_fu_817_p3;
reg   [0:0] cos_basis_reg_1392;
wire    ap_CS_fsm_state17;
wire   [63:0] r_V_3_fu_834_p2;
reg  signed [63:0] r_V_3_reg_1399;
wire    ap_CS_fsm_state18;
reg   [62:0] result_V_reg_1414;
wire    ap_CS_fsm_state22;
wire   [11:0] r_V_fu_880_p2;
reg   [11:0] r_V_reg_1419;
wire   [63:0] grp_scaled_fixed2ieee_fu_268_ap_return;
reg   [63:0] resultf_reg_1424;
wire    ap_CS_fsm_state23;
wire    grp_scaled_fixed2ieee_fu_268_ap_idle;
wire    grp_scaled_fixed2ieee_fu_268_ap_ready;
wire    grp_scaled_fixed2ieee_fu_268_ap_done;
wire    grp_scaled_fixed2ieee_fu_268_ap_start;
reg    grp_scaled_fixed2ieee_fu_268_ap_start_reg;
wire   [63:0] tmp_2_i_i_fu_330_p1;
wire   [63:0] p_Val2_s_fu_274_p1;
wire   [10:0] expv_op_fu_306_p2;
wire   [10:0] addr_V_fu_312_p3;
wire   [3:0] p_Result_i_i_fu_320_p4;
wire   [255:0] tmp_4_i_i_fu_339_p1;
wire   [255:0] r_V_4_fu_342_p2;
wire   [52:0] p_Result_20_fu_358_p3;
wire   [169:0] grp_fu_372_p0;
wire   [52:0] grp_fu_372_p1;
wire   [222:0] grp_fu_372_p2;
wire   [0:0] tmp_14_fu_409_p1;
wire   [123:0] p_Val2_i_fu_413_p2;
wire   [10:0] tmp_i_fu_435_p2;
wire   [61:0] p_Result_21_fu_447_p3;
reg   [61:0] p_Result_22_fu_454_p4;
wire   [63:0] p_Result_23_fu_464_p3;
reg   [63:0] tmp_i3_i_fu_472_p3;
wire   [5:0] Mx_zeros_V_fu_480_p1;
wire   [123:0] tmp_15_i_fu_484_p1;
wire   [123:0] p_Val2_13_fu_488_p2;
wire   [10:0] storemerge_i_fu_440_p3;
wire   [10:0] tmp_18_i_fu_503_p1;
wire  signed [11:0] sh_cast_fu_531_p1;
wire   [11:0] tmp_20_i_fu_534_p2;
wire   [11:0] sh_assign_fu_540_p3;
wire  signed [31:0] sh_assign_2_cast_fu_547_p1;
wire   [62:0] tmp_21_i_fu_551_p1;
wire   [62:0] tmp_22_i_fu_555_p2;
wire   [62:0] tmp_23_i_fu_560_p2;
wire   [62:0] p_Val2_14_fu_565_p3;
wire   [48:0] grp_fu_620_p0;
wire   [48:0] grp_fu_620_p1;
wire   [0:0] not_do_cos_i_fu_626_p0;
wire   [0:0] sin_basis_fu_632_p2;
wire   [7:0] p_Result_24_fu_638_p3;
wire   [97:0] grp_fu_620_p2;
wire   [48:0] grp_fu_664_p0;
wire   [48:0] grp_fu_664_p1;
wire   [48:0] grp_fu_669_p0;
wire   [48:0] grp_fu_669_p1;
wire   [55:0] grp_fu_681_p0;
wire   [48:0] grp_fu_693_p0;
wire   [97:0] grp_fu_664_p2;
wire   [97:0] grp_fu_669_p2;
wire   [107:0] grp_fu_681_p2;
wire   [92:0] grp_fu_693_p2;
wire   [41:0] grp_fu_752_p0;
wire   [32:0] grp_fu_752_p1;
wire   [34:0] p_Val2_4_fu_764_p0;
wire   [24:0] p_Val2_4_fu_764_p1;
wire   [59:0] p_Val2_4_fu_764_p2;
wire   [62:0] p_Val2_20_fu_739_p3;
wire  signed [63:0] tmp_32_i_fu_780_p1;
wire  signed [63:0] tmp_33_i_fu_784_p1;
wire   [63:0] p_Val2_21_fu_787_p2;
wire  signed [63:0] tmp_35_i_cast_fu_793_p1;
wire   [74:0] grp_fu_752_p2;
wire   [0:0] cos_basis_fu_817_p0;
wire   [0:0] tmp_s_fu_812_p2;
wire   [63:0] tmp_37_i_cast_fu_823_p1;
wire   [63:0] p_Val2_23_fu_826_p2;
wire   [63:0] tmp_39_i_cast_fu_831_p1;
wire   [62:0] Mx_V_read_assign_fu_840_p3;
wire   [62:0] grp_fu_853_p1;
wire   [125:0] grp_fu_853_p2;
wire   [10:0] p_Ex_V_ret_fu_859_p3;
wire  signed [11:0] rhs_V_fu_876_p1;
wire    ap_CS_fsm_state24;
wire   [63:0] p_Val2_25_fu_887_p1;
wire   [3:0] p_Result_26_fu_912_p3;
wire   [0:0] tmp_3_fu_918_p18;
wire   [0:0] tmp_4_fu_956_p18;
wire   [0:0] p_cast_cast_fu_1009_p0;
wire   [0:0] tmp_5_fu_994_p3;
wire   [0:0] tmp_9_fu_1021_p2;
wire   [0:0] not_tmp_s_fu_1016_p2;
wire   [0:0] p_Result_25_fu_890_p3;
wire   [10:0] loc_V_2_fu_898_p4;
wire   [0:0] or_cond_fu_1001_p2;
wire   [0:0] p_Result_s_fu_1005_p2;
wire   [0:0] p_Result_s_39_fu_1026_p3;
wire   [10:0] p_cast_cast_fu_1009_p3;
wire   [10:0] p_Result_s_40_fu_1034_p3;
wire   [0:0] not_or_cond_demorgan_fu_1057_p2;
wire   [0:0] not_or_cond_fu_1061_p2;
wire   [0:0] tmp_10_fu_1075_p2;
wire   [51:0] p_Result_1_cast_fu_1067_p3;
wire   [51:0] loc_V_3_fu_908_p1;
wire   [0:0] p_Result_s_41_fu_1041_p3;
wire   [10:0] ret_V_6_fu_1049_p3;
wire   [51:0] ret_V_7_fu_1080_p3;
wire   [63:0] p_Result_27_fu_1088_p4;
reg   [23:0] ap_NS_fsm;
wire   [222:0] grp_fu_372_p00;
wire   [222:0] grp_fu_372_p10;
wire   [107:0] grp_fu_681_p00;
wire   [92:0] grp_fu_693_p00;
wire   [74:0] grp_fu_752_p00;
wire   [74:0] grp_fu_752_p10;
wire   [125:0] grp_fu_853_p10;
wire   [59:0] p_Val2_4_fu_764_p00;
wire   [59:0] p_Val2_4_fu_764_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 grp_scaled_fixed2ieee_fu_268_ap_start_reg = 1'b0;
end

sin_or_cos_doublebkb #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

sin_or_cos_doublecud #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_4_address0),
    .ce0(fourth_order_double_4_ce0),
    .q0(fourth_order_double_4_q0)
);

sin_or_cos_doubledEe #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_5_address0),
    .ce0(fourth_order_double_5_ce0),
    .q0(fourth_order_double_5_q0)
);

sin_or_cos_doubleeOg #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_6_address0),
    .ce0(fourth_order_double_6_ce0),
    .q0(fourth_order_double_6_q0)
);

sin_or_cos_doublefYi #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_7_address0),
    .ce0(fourth_order_double_7_ce0),
    .q0(fourth_order_double_7_q0)
);

sin_or_cos_doubleg8j #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_s_address0),
    .ce0(fourth_order_double_s_ce0),
    .q0(fourth_order_double_s_q0)
);

scaled_fixed2ieee grp_scaled_fixed2ieee_fu_268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_scaled_fixed2ieee_fu_268_ap_start),
    .ap_done(grp_scaled_fixed2ieee_fu_268_ap_done),
    .ap_idle(grp_scaled_fixed2ieee_fu_268_ap_idle),
    .ap_ready(grp_scaled_fixed2ieee_fu_268_ap_ready),
    .in_V(result_V_reg_1414),
    .prescale(r_V_reg_1419),
    .ap_return(grp_scaled_fixed2ieee_fu_268_ap_return)
);

dft_mul_170ns_53nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 223 ))
dft_mul_170ns_53nhbi_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_372_p0),
    .din1(grp_fu_372_p1),
    .ce(1'b1),
    .dout(grp_fu_372_p2)
);

dft_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
dft_mux_83_1_1_1_U7(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_29_reg_1169),
    .dout(tmp_fu_596_p10)
);

dft_mul_49ns_49nsibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
dft_mul_49ns_49nsibs_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_620_p0),
    .din1(grp_fu_620_p1),
    .ce(1'b1),
    .dout(grp_fu_620_p2)
);

dft_mul_49ns_49nsibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
dft_mul_49ns_49nsibs_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_664_p0),
    .din1(grp_fu_664_p1),
    .ce(1'b1),
    .dout(grp_fu_664_p2)
);

dft_mul_49ns_49nsibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
dft_mul_49ns_49nsibs_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_669_p0),
    .din1(grp_fu_669_p1),
    .ce(1'b1),
    .dout(grp_fu_669_p2)
);

dft_mul_56ns_52s_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 52 ),
    .dout_WIDTH( 108 ))
dft_mul_56ns_52s_jbC_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_681_p0),
    .din1(fourth_order_double_10_reg_1280),
    .ce(1'b1),
    .dout(grp_fu_681_p2)
);

dft_mul_49ns_44s_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 93 ))
dft_mul_49ns_44s_kbM_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_693_p0),
    .din1(fourth_order_double_12_reg_1285),
    .ce(1'b1),
    .dout(grp_fu_693_p2)
);

dft_mul_42ns_33nslbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 75 ))
dft_mul_42ns_33nslbW_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_752_p0),
    .din1(grp_fu_752_p1),
    .ce(1'b1),
    .dout(grp_fu_752_p2)
);

dft_mul_64s_63ns_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 63 ),
    .dout_WIDTH( 126 ))
dft_mul_64s_63ns_mb6_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_3_reg_1399),
    .din1(grp_fu_853_p1),
    .ce(1'b1),
    .dout(grp_fu_853_p2)
);

dft_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
dft_mux_164_1_1_1_U15(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_26_fu_912_p3),
    .dout(tmp_3_fu_918_p18)
);

dft_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
dft_mux_164_1_1_1_U16(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_26_fu_912_p3),
    .dout(tmp_4_fu_956_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scaled_fixed2ieee_fu_268_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_scaled_fixed2ieee_fu_268_ap_start_reg <= 1'b1;
        end else if ((grp_scaled_fixed2ieee_fu_268_ap_ready == 1'b1)) begin
            grp_scaled_fixed2ieee_fu_268_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Ex_V_reg_1192 <= Ex_V_fu_507_p2;
        Mx_V_reg_1185 <= {{p_Val2_13_fu_488_p2[123:61]}};
        isNeg_reg_1198 <= Ex_V_fu_507_p2[32'd10];
        tmp_6_reg_1204 <= tmp_6_fu_521_p2;
        tmp_8_reg_1210 <= tmp_8_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OP1_V_reg_1245[48 : 0] <= OP1_V_fu_617_p1[48 : 0];
        not_do_cos_i_reg_1252 <= not_do_cos_i_fu_626_p2;
        tmp_30_i_reg_1257[7 : 0] <= tmp_30_i_fu_645_p1[7 : 0];
        tmp_reg_1239 <= tmp_fu_596_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        closepath_reg_1121 <= closepath_fu_300_p2;
        loc_V_1_reg_1115 <= loc_V_1_fu_296_p1;
        loc_V_reg_1108 <= {{p_Val2_s_fu_274_p1[62:52]}};
        p_Result_19_reg_1102 <= p_Val2_s_fu_274_p1[32'd63];
        tmp_13_reg_1132 <= tmp_13_fu_335_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        cos_basis_reg_1392 <= cos_basis_fu_817_p3;
        r_V_3_reg_1399 <= r_V_3_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        fourth_order_double_10_reg_1280 <= fourth_order_double_5_q0;
        fourth_order_double_12_reg_1285 <= fourth_order_double_6_q0;
        tmp_25_i_reg_1274 <= {{grp_fu_620_p2[97:49]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fourth_order_double_14_reg_1357 <= fourth_order_double_7_q0;
        fourth_order_double_16_reg_1362 <= fourth_order_double_s_q0;
        p_Val2_19_reg_1342 <= fourth_order_double_4_q0;
        tmp_12_i_reg_1347 <= {{grp_fu_681_p2[107:52]}};
        tmp_14_i1_reg_1352 <= {{grp_fu_693_p2[92:45]}};
        tmp_27_i_reg_1332 <= {{grp_fu_664_p2[97:56]}};
        tmp_29_i_reg_1337 <= {{grp_fu_669_p2[97:63]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_Result_i2_i_reg_1180 <= {{p_Val2_11_fu_418_p3[123:63]}};
        p_Val2_11_reg_1175 <= p_Val2_11_fu_418_p3;
        p_Val2_29_reg_1169 <= p_Val2_29_fu_403_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_Result_i_reg_1218 <= {{p_Val2_14_fu_565_p3[62:56]}};
        p_Val2_15_reg_1223 <= p_Val2_15_fu_582_p1;
        tmp_i1_reg_1228 <= {{p_Val2_14_fu_565_p3[55:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p_Val2_22_reg_1382 <= p_Val2_22_fu_796_p2;
        tmp_2_reg_1377 <= {{p_Val2_4_fu_764_p2[59:31]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_8_reg_1158 <= {{grp_fu_372_p2[166:43]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        r_V_reg_1419 <= r_V_fu_880_p2;
        result_V_reg_1414 <= {{grp_fu_853_p2[125:63]}};
    end
end

always @ (posedge ap_clk) begin
    if (((grp_scaled_fixed2ieee_fu_268_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        resultf_reg_1424 <= grp_scaled_fixed2ieee_fu_268_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ret_V_reg_1137 <= {{r_V_4_fu_342_p2[255:86]}};
    end
end

always @ (posedge ap_clk) begin
    if (((closepath_reg_1121 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_14_i_reg_1164 <= {{grp_fu_372_p2[169:167]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_1_reg_1387 <= {{grp_fu_752_p2[74:38]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_7_reg_1152 <= tmp_7_fu_378_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fourth_order_double_4_ce0 = 1'b1;
    end else begin
        fourth_order_double_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        fourth_order_double_5_ce0 = 1'b1;
    end else begin
        fourth_order_double_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        fourth_order_double_6_ce0 = 1'b1;
    end else begin
        fourth_order_double_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fourth_order_double_7_ce0 = 1'b1;
    end else begin
        fourth_order_double_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fourth_order_double_s_ce0 = 1'b1;
    end else begin
        fourth_order_double_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_scaled_fixed2ieee_fu_268_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ex_V_fu_507_p2 = (storemerge_i_fu_440_p3 - tmp_18_i_fu_503_p1);

assign Mx_V_read_assign_fu_840_p3 = ((cos_basis_reg_1392[0:0] === 1'b1) ? 63'd9223372036854775807 : Mx_V_reg_1185);

assign Mx_zeros_V_fu_480_p1 = tmp_i3_i_fu_472_p3[5:0];

assign OP1_V_fu_617_p1 = tmp_i1_reg_1228;

assign OP2_V_fu_661_p1 = tmp_25_i_reg_1274;

assign addr_V_fu_312_p3 = ((closepath_fu_300_p2[0:0] === 1'b1) ? 11'd74 : expv_op_fu_306_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = p_Result_27_fu_1088_p4;

assign closepath_fu_300_p2 = ((loc_V_fu_286_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign cos_basis_fu_817_p0 = do_cos;

assign cos_basis_fu_817_p3 = ((cos_basis_fu_817_p0[0:0] === 1'b1) ? tmp_s_fu_812_p2 : tmp_reg_1239);

assign expv_op_fu_306_p2 = ($signed(11'd1101) + $signed(loc_V_fu_286_p4));

assign fourth_order_double_4_address0 = tmp_30_i_reg_1257;

assign fourth_order_double_5_address0 = tmp_30_i_fu_645_p1;

assign fourth_order_double_6_address0 = tmp_30_i_fu_645_p1;

assign fourth_order_double_7_address0 = tmp_30_i_reg_1257;

assign fourth_order_double_s_address0 = tmp_30_i_reg_1257;

assign grp_fu_372_p0 = grp_fu_372_p00;

assign grp_fu_372_p00 = ret_V_reg_1137;

assign grp_fu_372_p1 = grp_fu_372_p10;

assign grp_fu_372_p10 = p_Result_20_fu_358_p3;

assign grp_fu_620_p0 = OP1_V_fu_617_p1;

assign grp_fu_620_p1 = OP1_V_fu_617_p1;

assign grp_fu_664_p0 = OP2_V_fu_661_p1;

assign grp_fu_664_p1 = OP1_V_reg_1245;

assign grp_fu_669_p0 = OP2_V_fu_661_p1;

assign grp_fu_669_p1 = OP2_V_fu_661_p1;

assign grp_fu_681_p0 = grp_fu_681_p00;

assign grp_fu_681_p00 = p_Val2_15_reg_1223;

assign grp_fu_693_p0 = grp_fu_693_p00;

assign grp_fu_693_p00 = tmp_25_i_reg_1274;

assign grp_fu_752_p0 = grp_fu_752_p00;

assign grp_fu_752_p00 = tmp_27_i_reg_1332;

assign grp_fu_752_p1 = grp_fu_752_p10;

assign grp_fu_752_p10 = fourth_order_double_14_reg_1357;

assign grp_fu_853_p1 = grp_fu_853_p10;

assign grp_fu_853_p10 = Mx_V_read_assign_fu_840_p3;

assign grp_scaled_fixed2ieee_fu_268_ap_start = grp_scaled_fixed2ieee_fu_268_ap_start_reg;

assign loc_V_1_fu_296_p1 = p_Val2_s_fu_274_p1[51:0];

assign loc_V_2_fu_898_p4 = {{p_Val2_25_fu_887_p1[62:52]}};

assign loc_V_3_fu_908_p1 = p_Val2_25_fu_887_p1[51:0];

assign loc_V_fu_286_p4 = {{p_Val2_s_fu_274_p1[62:52]}};

assign not_do_cos_i_fu_626_p0 = do_cos;

assign not_do_cos_i_fu_626_p2 = (not_do_cos_i_fu_626_p0 ^ 1'd1);

assign not_or_cond_demorgan_fu_1057_p2 = (tmp_7_reg_1152 & tmp_6_reg_1204);

assign not_or_cond_fu_1061_p2 = (not_or_cond_demorgan_fu_1057_p2 ^ 1'd1);

assign not_tmp_s_fu_1016_p2 = (tmp_8_reg_1210 ^ 1'd1);

assign or_cond_fu_1001_p2 = (tmp_7_reg_1152 & tmp_6_reg_1204);

assign p_Ex_V_ret_fu_859_p3 = ((cos_basis_reg_1392[0:0] === 1'b1) ? 11'd0 : Ex_V_reg_1192);

assign p_Result_1_cast_fu_1067_p3 = ((not_or_cond_fu_1061_p2[0:0] === 1'b1) ? 52'd4503599627370495 : 52'd0);

assign p_Result_20_fu_358_p3 = {{1'd1}, {loc_V_1_reg_1115}};

assign p_Result_21_fu_447_p3 = {{p_Result_i2_i_reg_1180}, {1'd1}};

integer ap_tvar_int_0;

always @ (p_Result_21_fu_447_p3) begin
    for (ap_tvar_int_0 = 62 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 61 - 0) begin
            p_Result_22_fu_454_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_22_fu_454_p4[ap_tvar_int_0] = p_Result_21_fu_447_p3[61 - ap_tvar_int_0];
        end
    end
end

assign p_Result_23_fu_464_p3 = {{2'd3}, {p_Result_22_fu_454_p4}};

assign p_Result_24_fu_638_p3 = {{sin_basis_fu_632_p2}, {p_Result_i_reg_1218}};

assign p_Result_25_fu_890_p3 = p_Val2_25_fu_887_p1[32'd63];

assign p_Result_26_fu_912_p3 = {{p_Result_19_reg_1102}, {p_Val2_29_reg_1169}};

assign p_Result_27_fu_1088_p4 = {{{p_Result_s_41_fu_1041_p3}, {ret_V_6_fu_1049_p3}}, {ret_V_7_fu_1080_p3}};

assign p_Result_i_i_fu_320_p4 = {{addr_V_fu_312_p3[10:7]}};

assign p_Result_s_39_fu_1026_p3 = ((tmp_9_fu_1021_p2[0:0] === 1'b1) ? not_tmp_s_fu_1016_p2 : p_Result_25_fu_890_p3);

assign p_Result_s_40_fu_1034_p3 = ((tmp_8_reg_1210[0:0] === 1'b1) ? 11'd2047 : loc_V_2_fu_898_p4);

assign p_Result_s_41_fu_1041_p3 = ((or_cond_fu_1001_p2[0:0] === 1'b1) ? p_Result_s_fu_1005_p2 : p_Result_s_39_fu_1026_p3);

assign p_Result_s_fu_1005_p2 = (p_Result_19_reg_1102 & not_do_cos_i_reg_1252);

assign p_Val2_11_fu_418_p3 = ((tmp_14_fu_409_p1[0:0] === 1'b1) ? p_Val2_i_fu_413_p2 : p_Val2_8_reg_1158);

assign p_Val2_13_fu_488_p2 = p_Val2_11_reg_1175 << tmp_15_i_fu_484_p1;

assign p_Val2_14_fu_565_p3 = ((isNeg_reg_1198[0:0] === 1'b1) ? tmp_22_i_fu_555_p2 : tmp_23_i_fu_560_p2);

assign p_Val2_15_fu_582_p1 = p_Val2_14_fu_565_p3[55:0];

assign p_Val2_20_fu_739_p3 = {{p_Val2_19_reg_1342}, {4'd0}};

assign p_Val2_21_fu_787_p2 = ($signed(tmp_32_i_fu_780_p1) + $signed(tmp_33_i_fu_784_p1));

assign p_Val2_22_fu_796_p2 = ($signed(p_Val2_21_fu_787_p2) + $signed(tmp_35_i_cast_fu_793_p1));

assign p_Val2_23_fu_826_p2 = (p_Val2_22_reg_1382 + tmp_37_i_cast_fu_823_p1);

assign p_Val2_25_fu_887_p1 = resultf_reg_1424;

assign p_Val2_29_fu_403_p3 = ((closepath_reg_1121[0:0] === 1'b1) ? 3'd0 : tmp_14_i_reg_1164);

assign p_Val2_4_fu_764_p0 = p_Val2_4_fu_764_p00;

assign p_Val2_4_fu_764_p00 = tmp_29_i_reg_1337;

assign p_Val2_4_fu_764_p1 = p_Val2_4_fu_764_p10;

assign p_Val2_4_fu_764_p10 = fourth_order_double_16_reg_1362;

assign p_Val2_4_fu_764_p2 = (p_Val2_4_fu_764_p0 * p_Val2_4_fu_764_p1);

assign p_Val2_i_fu_413_p2 = (124'd0 - p_Val2_8_reg_1158);

assign p_Val2_s_fu_274_p1 = t_in;

assign p_cast_cast_fu_1009_p0 = do_cos;

assign p_cast_cast_fu_1009_p3 = ((p_cast_cast_fu_1009_p0[0:0] === 1'b1) ? 11'd1023 : 11'd0);

assign r_V_3_fu_834_p2 = (p_Val2_23_fu_826_p2 + tmp_39_i_cast_fu_831_p1);

assign r_V_4_fu_342_p2 = ref_4oPi_table_256_V_q0 << tmp_4_i_i_fu_339_p1;

assign r_V_fu_880_p2 = ($signed(12'd0) - $signed(rhs_V_fu_876_p1));

assign ref_4oPi_table_256_V_address0 = tmp_2_i_i_fu_330_p1;

assign ret_V_6_fu_1049_p3 = ((or_cond_fu_1001_p2[0:0] === 1'b1) ? p_cast_cast_fu_1009_p3 : p_Result_s_40_fu_1034_p3);

assign ret_V_7_fu_1080_p3 = ((tmp_10_fu_1075_p2[0:0] === 1'b1) ? p_Result_1_cast_fu_1067_p3 : loc_V_3_fu_908_p1);

assign rhs_V_fu_876_p1 = $signed(p_Ex_V_ret_fu_859_p3);

assign sh_assign_2_cast_fu_547_p1 = $signed(sh_assign_fu_540_p3);

assign sh_assign_fu_540_p3 = ((isNeg_reg_1198[0:0] === 1'b1) ? tmp_20_i_fu_534_p2 : sh_cast_fu_531_p1);

assign sh_cast_fu_531_p1 = Ex_V_reg_1192;

assign sin_basis_fu_632_p2 = (tmp_fu_596_p10 ^ not_do_cos_i_fu_626_p2);

assign storemerge_i_fu_440_p3 = ((closepath_reg_1121[0:0] === 1'b1) ? tmp_i_fu_435_p2 : 11'd0);

assign tmp_10_fu_1075_p2 = (tmp_8_reg_1210 | or_cond_fu_1001_p2);

assign tmp_13_fu_335_p1 = addr_V_fu_312_p3[6:0];

assign tmp_14_fu_409_p1 = p_Val2_29_fu_403_p3[0:0];

assign tmp_15_i_fu_484_p1 = Mx_zeros_V_fu_480_p1;

assign tmp_18_i_fu_503_p1 = Mx_zeros_V_fu_480_p1;

assign tmp_20_i_fu_534_p2 = ($signed(12'd0) - $signed(sh_cast_fu_531_p1));

assign tmp_21_i_fu_551_p1 = $unsigned(sh_assign_2_cast_fu_547_p1);

assign tmp_22_i_fu_555_p2 = Mx_V_reg_1185 >> tmp_21_i_fu_551_p1;

assign tmp_23_i_fu_560_p2 = Mx_V_reg_1185 << tmp_21_i_fu_551_p1;

assign tmp_2_i_i_fu_330_p1 = p_Result_i_i_fu_320_p4;

assign tmp_30_i_fu_645_p1 = p_Result_24_fu_638_p3;

assign tmp_32_i_fu_780_p1 = $signed(p_Val2_20_fu_739_p3);

assign tmp_33_i_fu_784_p1 = $signed(tmp_12_i_reg_1347);

assign tmp_35_i_cast_fu_793_p1 = $signed(tmp_14_i1_reg_1352);

assign tmp_37_i_cast_fu_823_p1 = tmp_1_reg_1387;

assign tmp_39_i_cast_fu_831_p1 = tmp_2_reg_1377;

assign tmp_4_i_i_fu_339_p1 = tmp_13_reg_1132;

assign tmp_5_fu_994_p3 = ((cos_basis_reg_1392[0:0] === 1'b1) ? tmp_3_fu_918_p18 : tmp_4_fu_956_p18);

assign tmp_6_fu_521_p2 = ((loc_V_reg_1108 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_7_fu_378_p2 = ((loc_V_1_reg_1115 == 52'd0) ? 1'b1 : 1'b0);

assign tmp_8_fu_526_p2 = ((loc_V_reg_1108 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_9_fu_1021_p2 = (tmp_8_reg_1210 | tmp_5_fu_994_p3);


always @ (p_Result_23_fu_464_p3) begin
    if (p_Result_23_fu_464_p3[0] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd0;
    end else if (p_Result_23_fu_464_p3[1] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd1;
    end else if (p_Result_23_fu_464_p3[2] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd2;
    end else if (p_Result_23_fu_464_p3[3] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd3;
    end else if (p_Result_23_fu_464_p3[4] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd4;
    end else if (p_Result_23_fu_464_p3[5] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd5;
    end else if (p_Result_23_fu_464_p3[6] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd6;
    end else if (p_Result_23_fu_464_p3[7] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd7;
    end else if (p_Result_23_fu_464_p3[8] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd8;
    end else if (p_Result_23_fu_464_p3[9] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd9;
    end else if (p_Result_23_fu_464_p3[10] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd10;
    end else if (p_Result_23_fu_464_p3[11] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd11;
    end else if (p_Result_23_fu_464_p3[12] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd12;
    end else if (p_Result_23_fu_464_p3[13] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd13;
    end else if (p_Result_23_fu_464_p3[14] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd14;
    end else if (p_Result_23_fu_464_p3[15] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd15;
    end else if (p_Result_23_fu_464_p3[16] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd16;
    end else if (p_Result_23_fu_464_p3[17] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd17;
    end else if (p_Result_23_fu_464_p3[18] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd18;
    end else if (p_Result_23_fu_464_p3[19] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd19;
    end else if (p_Result_23_fu_464_p3[20] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd20;
    end else if (p_Result_23_fu_464_p3[21] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd21;
    end else if (p_Result_23_fu_464_p3[22] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd22;
    end else if (p_Result_23_fu_464_p3[23] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd23;
    end else if (p_Result_23_fu_464_p3[24] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd24;
    end else if (p_Result_23_fu_464_p3[25] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd25;
    end else if (p_Result_23_fu_464_p3[26] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd26;
    end else if (p_Result_23_fu_464_p3[27] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd27;
    end else if (p_Result_23_fu_464_p3[28] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd28;
    end else if (p_Result_23_fu_464_p3[29] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd29;
    end else if (p_Result_23_fu_464_p3[30] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd30;
    end else if (p_Result_23_fu_464_p3[31] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd31;
    end else if (p_Result_23_fu_464_p3[32] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd32;
    end else if (p_Result_23_fu_464_p3[33] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd33;
    end else if (p_Result_23_fu_464_p3[34] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd34;
    end else if (p_Result_23_fu_464_p3[35] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd35;
    end else if (p_Result_23_fu_464_p3[36] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd36;
    end else if (p_Result_23_fu_464_p3[37] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd37;
    end else if (p_Result_23_fu_464_p3[38] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd38;
    end else if (p_Result_23_fu_464_p3[39] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd39;
    end else if (p_Result_23_fu_464_p3[40] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd40;
    end else if (p_Result_23_fu_464_p3[41] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd41;
    end else if (p_Result_23_fu_464_p3[42] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd42;
    end else if (p_Result_23_fu_464_p3[43] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd43;
    end else if (p_Result_23_fu_464_p3[44] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd44;
    end else if (p_Result_23_fu_464_p3[45] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd45;
    end else if (p_Result_23_fu_464_p3[46] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd46;
    end else if (p_Result_23_fu_464_p3[47] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd47;
    end else if (p_Result_23_fu_464_p3[48] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd48;
    end else if (p_Result_23_fu_464_p3[49] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd49;
    end else if (p_Result_23_fu_464_p3[50] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd50;
    end else if (p_Result_23_fu_464_p3[51] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd51;
    end else if (p_Result_23_fu_464_p3[52] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd52;
    end else if (p_Result_23_fu_464_p3[53] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd53;
    end else if (p_Result_23_fu_464_p3[54] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd54;
    end else if (p_Result_23_fu_464_p3[55] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd55;
    end else if (p_Result_23_fu_464_p3[56] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd56;
    end else if (p_Result_23_fu_464_p3[57] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd57;
    end else if (p_Result_23_fu_464_p3[58] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd58;
    end else if (p_Result_23_fu_464_p3[59] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd59;
    end else if (p_Result_23_fu_464_p3[60] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd60;
    end else if (p_Result_23_fu_464_p3[61] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd61;
    end else if (p_Result_23_fu_464_p3[62] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd62;
    end else if (p_Result_23_fu_464_p3[63] == 1'b1) begin
        tmp_i3_i_fu_472_p3 = 64'd63;
    end else begin
        tmp_i3_i_fu_472_p3 = 64'd64;
    end
end

assign tmp_i_fu_435_p2 = ($signed(11'd1027) + $signed(loc_V_reg_1108));

assign tmp_s_fu_812_p2 = (tmp_reg_1239 ^ 1'd1);

always @ (posedge ap_clk) begin
    OP1_V_reg_1245[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    tmp_30_i_reg_1257[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //sin_or_cos_double_s
