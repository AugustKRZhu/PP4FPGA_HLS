// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrix_vector_HH_
#define _matrix_vector_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrix_vector_mulbkb.h"

namespace ap_rtl {

struct matrix_vector : public sc_module {
    // Port declarations 42
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > M_0_address0;
    sc_out< sc_logic > M_0_ce0;
    sc_in< sc_lv<32> > M_0_q0;
    sc_out< sc_lv<3> > M_1_address0;
    sc_out< sc_logic > M_1_ce0;
    sc_in< sc_lv<32> > M_1_q0;
    sc_out< sc_lv<3> > M_2_address0;
    sc_out< sc_logic > M_2_ce0;
    sc_in< sc_lv<32> > M_2_q0;
    sc_out< sc_lv<3> > M_3_address0;
    sc_out< sc_logic > M_3_ce0;
    sc_in< sc_lv<32> > M_3_q0;
    sc_out< sc_lv<3> > M_4_address0;
    sc_out< sc_logic > M_4_ce0;
    sc_in< sc_lv<32> > M_4_q0;
    sc_out< sc_lv<3> > M_5_address0;
    sc_out< sc_logic > M_5_ce0;
    sc_in< sc_lv<32> > M_5_q0;
    sc_out< sc_lv<3> > M_6_address0;
    sc_out< sc_logic > M_6_ce0;
    sc_in< sc_lv<32> > M_6_q0;
    sc_out< sc_lv<3> > M_7_address0;
    sc_out< sc_logic > M_7_ce0;
    sc_in< sc_lv<32> > M_7_q0;
    sc_in< sc_lv<32> > V_In_0;
    sc_in< sc_lv<32> > V_In_1;
    sc_in< sc_lv<32> > V_In_2;
    sc_in< sc_lv<32> > V_In_3;
    sc_in< sc_lv<32> > V_In_4;
    sc_in< sc_lv<32> > V_In_5;
    sc_in< sc_lv<32> > V_In_6;
    sc_in< sc_lv<32> > V_In_7;
    sc_out< sc_lv<3> > V_Out_address0;
    sc_out< sc_logic > V_Out_ce0;
    sc_out< sc_logic > V_Out_we0;
    sc_out< sc_lv<32> > V_Out_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matrix_vector(sc_module_name name);
    SC_HAS_PROCESS(matrix_vector);

    ~matrix_vector();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrix_vector_mulbkb<1,3,32,32,32>* matrix_vector_mulbkb_U1;
    matrix_vector_mulbkb<1,3,32,32,32>* matrix_vector_mulbkb_U2;
    matrix_vector_mulbkb<1,3,32,32,32>* matrix_vector_mulbkb_U3;
    matrix_vector_mulbkb<1,3,32,32,32>* matrix_vector_mulbkb_U4;
    matrix_vector_mulbkb<1,3,32,32,32>* matrix_vector_mulbkb_U5;
    matrix_vector_mulbkb<1,3,32,32,32>* matrix_vector_mulbkb_U6;
    matrix_vector_mulbkb<1,3,32,32,32>* matrix_vector_mulbkb_U7;
    matrix_vector_mulbkb<1,3,32,32,32>* matrix_vector_mulbkb_U8;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_reg_235;
    sc_signal< sc_lv<1> > exitcond1_fu_246_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_334;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond1_reg_334_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond1_reg_334_pp0_iter2_reg;
    sc_signal< sc_lv<1> > exitcond1_reg_334_pp0_iter3_reg;
    sc_signal< sc_lv<1> > exitcond1_reg_334_pp0_iter4_reg;
    sc_signal< sc_lv<1> > exitcond1_reg_334_pp0_iter5_reg;
    sc_signal< sc_lv<4> > i_1_fu_252_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > tmp_fu_258_p1;
    sc_signal< sc_lv<64> > tmp_reg_343;
    sc_signal< sc_lv<64> > tmp_reg_343_pp0_iter1_reg;
    sc_signal< sc_lv<64> > tmp_reg_343_pp0_iter2_reg;
    sc_signal< sc_lv<64> > tmp_reg_343_pp0_iter3_reg;
    sc_signal< sc_lv<64> > tmp_reg_343_pp0_iter4_reg;
    sc_signal< sc_lv<64> > tmp_reg_343_pp0_iter5_reg;
    sc_signal< sc_lv<32> > V_In_0_read_reg_348;
    sc_signal< sc_lv<32> > V_In_0_read_reg_348_pp0_iter1_reg;
    sc_signal< sc_lv<32> > V_In_1_read_reg_358;
    sc_signal< sc_lv<32> > V_In_1_read_reg_358_pp0_iter1_reg;
    sc_signal< sc_lv<32> > V_In_2_read_reg_368;
    sc_signal< sc_lv<32> > V_In_2_read_reg_368_pp0_iter1_reg;
    sc_signal< sc_lv<32> > V_In_3_read_reg_378;
    sc_signal< sc_lv<32> > V_In_3_read_reg_378_pp0_iter1_reg;
    sc_signal< sc_lv<32> > V_In_4_read_reg_388;
    sc_signal< sc_lv<32> > V_In_4_read_reg_388_pp0_iter1_reg;
    sc_signal< sc_lv<32> > V_In_5_read_reg_398;
    sc_signal< sc_lv<32> > V_In_5_read_reg_398_pp0_iter1_reg;
    sc_signal< sc_lv<32> > V_In_6_read_reg_408;
    sc_signal< sc_lv<32> > V_In_6_read_reg_408_pp0_iter1_reg;
    sc_signal< sc_lv<32> > V_In_7_read_reg_418;
    sc_signal< sc_lv<32> > V_In_7_read_reg_418_pp0_iter1_reg;
    sc_signal< sc_lv<32> > M_0_load_reg_428;
    sc_signal< sc_lv<32> > M_1_load_reg_433;
    sc_signal< sc_lv<32> > M_2_load_reg_438;
    sc_signal< sc_lv<32> > M_3_load_reg_443;
    sc_signal< sc_lv<32> > M_4_load_reg_448;
    sc_signal< sc_lv<32> > M_5_load_reg_453;
    sc_signal< sc_lv<32> > M_6_load_reg_458;
    sc_signal< sc_lv<32> > M_7_load_reg_463;
    sc_signal< sc_lv<32> > grp_fu_270_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_468;
    sc_signal< sc_lv<32> > grp_fu_274_p2;
    sc_signal< sc_lv<32> > tmp_3_1_reg_473;
    sc_signal< sc_lv<32> > grp_fu_278_p2;
    sc_signal< sc_lv<32> > tmp_3_2_reg_478;
    sc_signal< sc_lv<32> > grp_fu_282_p2;
    sc_signal< sc_lv<32> > tmp_3_3_reg_483;
    sc_signal< sc_lv<32> > grp_fu_286_p2;
    sc_signal< sc_lv<32> > tmp_3_4_reg_488;
    sc_signal< sc_lv<32> > grp_fu_290_p2;
    sc_signal< sc_lv<32> > tmp_3_5_reg_493;
    sc_signal< sc_lv<32> > grp_fu_294_p2;
    sc_signal< sc_lv<32> > tmp_3_6_reg_498;
    sc_signal< sc_lv<32> > grp_fu_298_p2;
    sc_signal< sc_lv<32> > tmp_3_7_reg_503;
    sc_signal< sc_lv<32> > tmp2_fu_302_p2;
    sc_signal< sc_lv<32> > tmp2_reg_508;
    sc_signal< sc_lv<32> > tmp3_fu_306_p2;
    sc_signal< sc_lv<32> > tmp3_reg_513;
    sc_signal< sc_lv<32> > tmp4_fu_318_p2;
    sc_signal< sc_lv<32> > tmp4_reg_518;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > tmp6_fu_314_p2;
    sc_signal< sc_lv<32> > tmp5_fu_310_p2;
    sc_signal< sc_lv<32> > tmp1_fu_324_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_M_0_address0();
    void thread_M_0_ce0();
    void thread_M_1_address0();
    void thread_M_1_ce0();
    void thread_M_2_address0();
    void thread_M_2_ce0();
    void thread_M_3_address0();
    void thread_M_3_ce0();
    void thread_M_4_address0();
    void thread_M_4_ce0();
    void thread_M_5_address0();
    void thread_M_5_ce0();
    void thread_M_6_address0();
    void thread_M_6_ce0();
    void thread_M_7_address0();
    void thread_M_7_ce0();
    void thread_V_Out_address0();
    void thread_V_Out_ce0();
    void thread_V_Out_d0();
    void thread_V_Out_we0();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond1_fu_246_p2();
    void thread_i_1_fu_252_p2();
    void thread_tmp1_fu_324_p2();
    void thread_tmp2_fu_302_p2();
    void thread_tmp3_fu_306_p2();
    void thread_tmp4_fu_318_p2();
    void thread_tmp5_fu_310_p2();
    void thread_tmp6_fu_314_p2();
    void thread_tmp_fu_258_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
