

================================================================
== Vivado HLS Report for 'matrix_vector'
================================================================
* Date:           Tue Apr 23 16:40:43 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        matrix_vector_base.proj
* Solution:       solution
* Product family: virtex7
* Target device:  xc7v585tffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|     4.108|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   15|   15|   15|   15|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- data_loop  |   13|   13|         7|          1|          1|     8|    yes   |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	9  / (exitcond1)
	3  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	2  / true
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.85>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %V_In_7), !map !7"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %V_In_6), !map !13"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %V_In_5), !map !19"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %V_In_4), !map !25"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %V_In_3), !map !31"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %V_In_2), !map !37"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %V_In_1), !map !43"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %V_In_0), !map !49"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %M_7), !map !55"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %M_6), !map !61"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %M_5), !map !66"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %M_4), !map !71"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %M_3), !map !76"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %M_2), !map !81"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %M_1), !map !86"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %M_0), !map !91"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %V_Out) nounwind, !map !96"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @matrix_vector_str) nounwind"   --->   Operation 27 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.85ns)   --->   "br label %1" [./matrix_vector_base.c:9]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.85>

State 2 <SV = 1> <Delay = 1.14>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%i = phi i4 [ 0, %0 ], [ %i_1, %2 ]"   --->   Operation 29 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.87ns)   --->   "%exitcond1 = icmp eq i4 %i, -8" [./matrix_vector_base.c:9]   --->   Operation 30 'icmp' 'exitcond1' <Predicate = true> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind"   --->   Operation 31 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.01ns)   --->   "%i_1 = add i4 %i, 1" [./matrix_vector_base.c:9]   --->   Operation 32 'add' 'i_1' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %3, label %2" [./matrix_vector_base.c:9]   --->   Operation 33 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp = zext i4 %i to i64" [./matrix_vector_base.c:15]   --->   Operation 34 'zext' 'tmp' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%V_In_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %V_In_0)" [./matrix_vector_base.c:15]   --->   Operation 35 'read' 'V_In_0_read' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%M_0_addr = getelementptr [8 x i32]* %M_0, i64 0, i64 %tmp" [./matrix_vector_base.c:15]   --->   Operation 36 'getelementptr' 'M_0_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (1.14ns)   --->   "%M_0_load = load i32* %M_0_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 37 'load' 'M_0_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%V_In_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %V_In_1)" [./matrix_vector_base.c:15]   --->   Operation 38 'read' 'V_In_1_read' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%M_1_addr = getelementptr [8 x i32]* %M_1, i64 0, i64 %tmp" [./matrix_vector_base.c:15]   --->   Operation 39 'getelementptr' 'M_1_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 40 [2/2] (1.14ns)   --->   "%M_1_load = load i32* %M_1_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 40 'load' 'M_1_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%V_In_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %V_In_2)" [./matrix_vector_base.c:15]   --->   Operation 41 'read' 'V_In_2_read' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%M_2_addr = getelementptr [8 x i32]* %M_2, i64 0, i64 %tmp" [./matrix_vector_base.c:15]   --->   Operation 42 'getelementptr' 'M_2_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 43 [2/2] (1.14ns)   --->   "%M_2_load = load i32* %M_2_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 43 'load' 'M_2_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%V_In_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %V_In_3)" [./matrix_vector_base.c:15]   --->   Operation 44 'read' 'V_In_3_read' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%M_3_addr = getelementptr [8 x i32]* %M_3, i64 0, i64 %tmp" [./matrix_vector_base.c:15]   --->   Operation 45 'getelementptr' 'M_3_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 46 [2/2] (1.14ns)   --->   "%M_3_load = load i32* %M_3_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 46 'load' 'M_3_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%V_In_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %V_In_4)" [./matrix_vector_base.c:15]   --->   Operation 47 'read' 'V_In_4_read' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%M_4_addr = getelementptr [8 x i32]* %M_4, i64 0, i64 %tmp" [./matrix_vector_base.c:15]   --->   Operation 48 'getelementptr' 'M_4_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 49 [2/2] (1.14ns)   --->   "%M_4_load = load i32* %M_4_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 49 'load' 'M_4_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%V_In_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %V_In_5)" [./matrix_vector_base.c:15]   --->   Operation 50 'read' 'V_In_5_read' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%M_5_addr = getelementptr [8 x i32]* %M_5, i64 0, i64 %tmp" [./matrix_vector_base.c:15]   --->   Operation 51 'getelementptr' 'M_5_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 52 [2/2] (1.14ns)   --->   "%M_5_load = load i32* %M_5_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 52 'load' 'M_5_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%V_In_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %V_In_6)" [./matrix_vector_base.c:15]   --->   Operation 53 'read' 'V_In_6_read' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%M_6_addr = getelementptr [8 x i32]* %M_6, i64 0, i64 %tmp" [./matrix_vector_base.c:15]   --->   Operation 54 'getelementptr' 'M_6_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 55 [2/2] (1.14ns)   --->   "%M_6_load = load i32* %M_6_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 55 'load' 'M_6_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%V_In_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %V_In_7)" [./matrix_vector_base.c:15]   --->   Operation 56 'read' 'V_In_7_read' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%M_7_addr = getelementptr [8 x i32]* %M_7, i64 0, i64 %tmp" [./matrix_vector_base.c:15]   --->   Operation 57 'getelementptr' 'M_7_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 58 [2/2] (1.14ns)   --->   "%M_7_load = load i32* %M_7_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 58 'load' 'M_7_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 3 <SV = 2> <Delay = 1.14>
ST_3 : Operation 59 [1/2] (1.14ns)   --->   "%M_0_load = load i32* %M_0_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 59 'load' 'M_0_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 60 [1/2] (1.14ns)   --->   "%M_1_load = load i32* %M_1_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 60 'load' 'M_1_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 61 [1/2] (1.14ns)   --->   "%M_2_load = load i32* %M_2_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 61 'load' 'M_2_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 62 [1/2] (1.14ns)   --->   "%M_3_load = load i32* %M_3_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 62 'load' 'M_3_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 63 [1/2] (1.14ns)   --->   "%M_4_load = load i32* %M_4_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 63 'load' 'M_4_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 64 [1/2] (1.14ns)   --->   "%M_5_load = load i32* %M_5_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 64 'load' 'M_5_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 65 [1/2] (1.14ns)   --->   "%M_6_load = load i32* %M_6_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 65 'load' 'M_6_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 66 [1/2] (1.14ns)   --->   "%M_7_load = load i32* %M_7_addr, align 4" [./matrix_vector_base.c:15]   --->   Operation 66 'load' 'M_7_load' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 4 <SV = 3> <Delay = 4.10>
ST_4 : Operation 67 [3/3] (4.10ns)   --->   "%tmp_3 = mul nsw i32 %V_In_0_read, %M_0_load" [./matrix_vector_base.c:15]   --->   Operation 67 'mul' 'tmp_3' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 68 [3/3] (4.10ns)   --->   "%tmp_3_1 = mul nsw i32 %V_In_1_read, %M_1_load" [./matrix_vector_base.c:15]   --->   Operation 68 'mul' 'tmp_3_1' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [3/3] (4.10ns)   --->   "%tmp_3_2 = mul nsw i32 %V_In_2_read, %M_2_load" [./matrix_vector_base.c:15]   --->   Operation 69 'mul' 'tmp_3_2' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [3/3] (4.10ns)   --->   "%tmp_3_3 = mul nsw i32 %V_In_3_read, %M_3_load" [./matrix_vector_base.c:15]   --->   Operation 70 'mul' 'tmp_3_3' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [3/3] (4.10ns)   --->   "%tmp_3_4 = mul nsw i32 %V_In_4_read, %M_4_load" [./matrix_vector_base.c:15]   --->   Operation 71 'mul' 'tmp_3_4' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [3/3] (4.10ns)   --->   "%tmp_3_5 = mul nsw i32 %V_In_5_read, %M_5_load" [./matrix_vector_base.c:15]   --->   Operation 72 'mul' 'tmp_3_5' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [3/3] (4.10ns)   --->   "%tmp_3_6 = mul nsw i32 %V_In_6_read, %M_6_load" [./matrix_vector_base.c:15]   --->   Operation 73 'mul' 'tmp_3_6' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [3/3] (4.10ns)   --->   "%tmp_3_7 = mul nsw i32 %V_In_7_read, %M_7_load" [./matrix_vector_base.c:15]   --->   Operation 74 'mul' 'tmp_3_7' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.10>
ST_5 : Operation 75 [2/3] (4.10ns)   --->   "%tmp_3 = mul nsw i32 %V_In_0_read, %M_0_load" [./matrix_vector_base.c:15]   --->   Operation 75 'mul' 'tmp_3' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 76 [2/3] (4.10ns)   --->   "%tmp_3_1 = mul nsw i32 %V_In_1_read, %M_1_load" [./matrix_vector_base.c:15]   --->   Operation 76 'mul' 'tmp_3_1' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 77 [2/3] (4.10ns)   --->   "%tmp_3_2 = mul nsw i32 %V_In_2_read, %M_2_load" [./matrix_vector_base.c:15]   --->   Operation 77 'mul' 'tmp_3_2' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 78 [2/3] (4.10ns)   --->   "%tmp_3_3 = mul nsw i32 %V_In_3_read, %M_3_load" [./matrix_vector_base.c:15]   --->   Operation 78 'mul' 'tmp_3_3' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 79 [2/3] (4.10ns)   --->   "%tmp_3_4 = mul nsw i32 %V_In_4_read, %M_4_load" [./matrix_vector_base.c:15]   --->   Operation 79 'mul' 'tmp_3_4' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 80 [2/3] (4.10ns)   --->   "%tmp_3_5 = mul nsw i32 %V_In_5_read, %M_5_load" [./matrix_vector_base.c:15]   --->   Operation 80 'mul' 'tmp_3_5' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [2/3] (4.10ns)   --->   "%tmp_3_6 = mul nsw i32 %V_In_6_read, %M_6_load" [./matrix_vector_base.c:15]   --->   Operation 81 'mul' 'tmp_3_6' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [2/3] (4.10ns)   --->   "%tmp_3_7 = mul nsw i32 %V_In_7_read, %M_7_load" [./matrix_vector_base.c:15]   --->   Operation 82 'mul' 'tmp_3_7' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.10>
ST_6 : Operation 83 [1/3] (4.10ns)   --->   "%tmp_3 = mul nsw i32 %V_In_0_read, %M_0_load" [./matrix_vector_base.c:15]   --->   Operation 83 'mul' 'tmp_3' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/3] (4.10ns)   --->   "%tmp_3_1 = mul nsw i32 %V_In_1_read, %M_1_load" [./matrix_vector_base.c:15]   --->   Operation 84 'mul' 'tmp_3_1' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/3] (4.10ns)   --->   "%tmp_3_2 = mul nsw i32 %V_In_2_read, %M_2_load" [./matrix_vector_base.c:15]   --->   Operation 85 'mul' 'tmp_3_2' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 86 [1/3] (4.10ns)   --->   "%tmp_3_3 = mul nsw i32 %V_In_3_read, %M_3_load" [./matrix_vector_base.c:15]   --->   Operation 86 'mul' 'tmp_3_3' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/3] (4.10ns)   --->   "%tmp_3_4 = mul nsw i32 %V_In_4_read, %M_4_load" [./matrix_vector_base.c:15]   --->   Operation 87 'mul' 'tmp_3_4' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 88 [1/3] (4.10ns)   --->   "%tmp_3_5 = mul nsw i32 %V_In_5_read, %M_5_load" [./matrix_vector_base.c:15]   --->   Operation 88 'mul' 'tmp_3_5' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 89 [1/3] (4.10ns)   --->   "%tmp_3_6 = mul nsw i32 %V_In_6_read, %M_6_load" [./matrix_vector_base.c:15]   --->   Operation 89 'mul' 'tmp_3_6' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 90 [1/3] (4.10ns)   --->   "%tmp_3_7 = mul nsw i32 %V_In_7_read, %M_7_load" [./matrix_vector_base.c:15]   --->   Operation 90 'mul' 'tmp_3_7' <Predicate = (!exitcond1)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.76>
ST_7 : Operation 91 [1/1] (1.51ns)   --->   "%tmp2 = add i32 %tmp_3, %tmp_3_1" [./matrix_vector_base.c:15]   --->   Operation 91 'add' 'tmp2' <Predicate = (!exitcond1)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/1] (1.51ns)   --->   "%tmp3 = add i32 %tmp_3_2, %tmp_3_3" [./matrix_vector_base.c:15]   --->   Operation 92 'add' 'tmp3' <Predicate = (!exitcond1)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp5 = add i32 %tmp_3_4, %tmp_3_5" [./matrix_vector_base.c:15]   --->   Operation 93 'add' 'tmp5' <Predicate = (!exitcond1)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 94 [1/1] (1.51ns)   --->   "%tmp6 = add i32 %tmp_3_6, %tmp_3_7" [./matrix_vector_base.c:15]   --->   Operation 94 'add' 'tmp6' <Predicate = (!exitcond1)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%tmp4 = add i32 %tmp6, %tmp5" [./matrix_vector_base.c:15]   --->   Operation 95 'add' 'tmp4' <Predicate = (!exitcond1)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 3.40>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str2) nounwind" [./matrix_vector_base.c:9]   --->   Operation 96 'specloopname' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str2) nounwind" [./matrix_vector_base.c:9]   --->   Operation 97 'specregionbegin' 'tmp_1' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [./matrix_vector_base.c:10]   --->   Operation 98 'specpipeline' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_8 : Operation 99 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i32 %tmp3, %tmp2" [./matrix_vector_base.c:15]   --->   Operation 99 'add' 'tmp1' <Predicate = (!exitcond1)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 100 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%sum_1_7 = add nsw i32 %tmp4, %tmp1" [./matrix_vector_base.c:15]   --->   Operation 100 'add' 'sum_1_7' <Predicate = (!exitcond1)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "%V_Out_addr = getelementptr [8 x i32]* %V_Out, i64 0, i64 %tmp" [./matrix_vector_base.c:17]   --->   Operation 101 'getelementptr' 'V_Out_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (1.14ns)   --->   "store i32 %sum_1_7, i32* %V_Out_addr, align 4" [./matrix_vector_base.c:17]   --->   Operation 102 'store' <Predicate = (!exitcond1)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str2, i32 %tmp_1) nounwind" [./matrix_vector_base.c:19]   --->   Operation 103 'specregionend' 'empty_2' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "br label %1" [./matrix_vector_base.c:9]   --->   Operation 104 'br' <Predicate = (!exitcond1)> <Delay = 0.00>

State 9 <SV = 2> <Delay = 0.00>
ST_9 : Operation 105 [1/1] (0.00ns)   --->   "ret void" [./matrix_vector_base.c:20]   --->   Operation 105 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 0.85ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ./matrix_vector_base.c:9) [38]  (0.85 ns)

 <State 2>: 1.15ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./matrix_vector_base.c:9) [38]  (0 ns)
	'getelementptr' operation ('M_5_addr', ./matrix_vector_base.c:15) [69]  (0 ns)
	'load' operation ('M_5_load', ./matrix_vector_base.c:15) on array 'M_5' [70]  (1.15 ns)

 <State 3>: 1.15ns
The critical path consists of the following:
	'load' operation ('M_0_load', ./matrix_vector_base.c:15) on array 'M_0' [50]  (1.15 ns)

 <State 4>: 4.11ns
The critical path consists of the following:
	'mul' operation ('tmp_3', ./matrix_vector_base.c:15) [51]  (4.11 ns)

 <State 5>: 4.11ns
The critical path consists of the following:
	'mul' operation ('tmp_3', ./matrix_vector_base.c:15) [51]  (4.11 ns)

 <State 6>: 4.11ns
The critical path consists of the following:
	'mul' operation ('tmp_3', ./matrix_vector_base.c:15) [51]  (4.11 ns)

 <State 7>: 3.77ns
The critical path consists of the following:
	'add' operation ('tmp6', ./matrix_vector_base.c:15) [84]  (1.51 ns)
	'add' operation ('tmp4', ./matrix_vector_base.c:15) [85]  (2.25 ns)

 <State 8>: 3.4ns
The critical path consists of the following:
	'add' operation ('tmp1', ./matrix_vector_base.c:15) [82]  (0 ns)
	'add' operation ('sum_1_7', ./matrix_vector_base.c:15) [86]  (2.25 ns)
	'store' operation (./matrix_vector_base.c:17) of variable 'sum_1_7', ./matrix_vector_base.c:15 on array 'V_Out' [88]  (1.15 ns)

 <State 9>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
