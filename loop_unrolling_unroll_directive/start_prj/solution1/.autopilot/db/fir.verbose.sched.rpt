

================================================================
== Vivado HLS Report for 'fir'
================================================================
* Date:           Thu Nov 29 14:33:22 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        start_prj
* Solution:       solution1
* Product family: aartix7
* Target device:  xa7a12tcsg325-1q


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.470|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   10|   10|   10|   10|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.15>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%c_addr = getelementptr [11 x i32]* %c, i64 0, i64 10" [fir.c:81]   --->   Operation 12 'getelementptr' 'c_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [2/2] (2.15ns)   --->   "%c_load = load i32* %c_addr, align 4" [fir.c:81]   --->   Operation 13 'load' 'c_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>

State 2 <SV = 1> <Delay = 2.15>
ST_2 : Operation 14 [1/2] (2.15ns)   --->   "%c_load = load i32* %c_addr, align 4" [fir.c:81]   --->   Operation 14 'load' 'c_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%c_addr_1 = getelementptr [11 x i32]* %c, i64 0, i64 9" [fir.c:81]   --->   Operation 15 'getelementptr' 'c_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [2/2] (2.15ns)   --->   "%c_load_1 = load i32* %c_addr_1, align 4" [fir.c:81]   --->   Operation 16 'load' 'c_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%c_addr_2 = getelementptr [11 x i32]* %c, i64 0, i64 8" [fir.c:81]   --->   Operation 17 'getelementptr' 'c_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [2/2] (2.15ns)   --->   "%c_load_2 = load i32* %c_addr_2, align 4" [fir.c:81]   --->   Operation 18 'load' 'c_load_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>

State 3 <SV = 2> <Delay = 2.15>
ST_3 : Operation 19 [1/2] (2.15ns)   --->   "%c_load_1 = load i32* %c_addr_1, align 4" [fir.c:81]   --->   Operation 19 'load' 'c_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_3 : Operation 20 [1/2] (2.15ns)   --->   "%c_load_2 = load i32* %c_addr_2, align 4" [fir.c:81]   --->   Operation 20 'load' 'c_load_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%c_addr_3 = getelementptr [11 x i32]* %c, i64 0, i64 7" [fir.c:81]   --->   Operation 21 'getelementptr' 'c_addr_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [2/2] (2.15ns)   --->   "%c_load_3 = load i32* %c_addr_3, align 4" [fir.c:81]   --->   Operation 22 'load' 'c_load_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%c_addr_4 = getelementptr [11 x i32]* %c, i64 0, i64 6" [fir.c:81]   --->   Operation 23 'getelementptr' 'c_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [2/2] (2.15ns)   --->   "%c_load_4 = load i32* %c_addr_4, align 4" [fir.c:81]   --->   Operation 24 'load' 'c_load_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>

State 4 <SV = 3> <Delay = 8.47>
ST_4 : Operation 25 [1/1] (0.00ns)   --->   "%shift_reg_9_load = load i32* @shift_reg_9, align 4" [fir.c:72]   --->   Operation 25 'load' 'shift_reg_9_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 26 [1/1] (0.00ns)   --->   "%shift_reg_8_load = load i32* @shift_reg_8, align 16" [fir.c:72]   --->   Operation 26 'load' 'shift_reg_8_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "store i32 %shift_reg_8_load, i32* @shift_reg_9, align 4" [fir.c:72]   --->   Operation 27 'store' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 28 [1/1] (8.47ns)   --->   "%tmp_6 = mul nsw i32 %shift_reg_9_load, %c_load" [fir.c:81]   --->   Operation 28 'mul' 'tmp_6' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 29 [1/1] (8.47ns)   --->   "%tmp_6_1 = mul nsw i32 %shift_reg_8_load, %c_load_1" [fir.c:81]   --->   Operation 29 'mul' 'tmp_6_1' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 30 [1/2] (2.15ns)   --->   "%c_load_3 = load i32* %c_addr_3, align 4" [fir.c:81]   --->   Operation 30 'load' 'c_load_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_4 : Operation 31 [1/2] (2.15ns)   --->   "%c_load_4 = load i32* %c_addr_4, align 4" [fir.c:81]   --->   Operation 31 'load' 'c_load_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%c_addr_5 = getelementptr [11 x i32]* %c, i64 0, i64 5" [fir.c:81]   --->   Operation 32 'getelementptr' 'c_addr_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [2/2] (2.15ns)   --->   "%c_load_5 = load i32* %c_addr_5, align 4" [fir.c:81]   --->   Operation 33 'load' 'c_load_5' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%c_addr_6 = getelementptr [11 x i32]* %c, i64 0, i64 4" [fir.c:81]   --->   Operation 34 'getelementptr' 'c_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [2/2] (2.15ns)   --->   "%c_load_6 = load i32* %c_addr_6, align 4" [fir.c:81]   --->   Operation 35 'load' 'c_load_6' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>

State 5 <SV = 4> <Delay = 8.47>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%shift_reg_7_load = load i32* @shift_reg_7, align 4" [fir.c:72]   --->   Operation 36 'load' 'shift_reg_7_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "store i32 %shift_reg_7_load, i32* @shift_reg_8, align 16" [fir.c:72]   --->   Operation 37 'store' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%shift_reg_6_load = load i32* @shift_reg_6, align 8" [fir.c:72]   --->   Operation 38 'load' 'shift_reg_6_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "store i32 %shift_reg_6_load, i32* @shift_reg_7, align 4" [fir.c:72]   --->   Operation 39 'store' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%shift_reg_5_load = load i32* @shift_reg_5, align 4" [fir.c:72]   --->   Operation 40 'load' 'shift_reg_5_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "store i32 %shift_reg_5_load, i32* @shift_reg_6, align 8" [fir.c:72]   --->   Operation 41 'store' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (8.47ns)   --->   "%tmp_6_2 = mul nsw i32 %shift_reg_7_load, %c_load_2" [fir.c:81]   --->   Operation 42 'mul' 'tmp_6_2' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (8.47ns)   --->   "%tmp_6_3 = mul nsw i32 %shift_reg_6_load, %c_load_3" [fir.c:81]   --->   Operation 43 'mul' 'tmp_6_3' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 44 [1/1] (8.47ns)   --->   "%tmp_6_4 = mul nsw i32 %shift_reg_5_load, %c_load_4" [fir.c:81]   --->   Operation 44 'mul' 'tmp_6_4' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 45 [1/2] (2.15ns)   --->   "%c_load_5 = load i32* %c_addr_5, align 4" [fir.c:81]   --->   Operation 45 'load' 'c_load_5' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_5 : Operation 46 [1/2] (2.15ns)   --->   "%c_load_6 = load i32* %c_addr_6, align 4" [fir.c:81]   --->   Operation 46 'load' 'c_load_6' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%c_addr_7 = getelementptr [11 x i32]* %c, i64 0, i64 3" [fir.c:81]   --->   Operation 47 'getelementptr' 'c_addr_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [2/2] (2.15ns)   --->   "%c_load_7 = load i32* %c_addr_7, align 4" [fir.c:81]   --->   Operation 48 'load' 'c_load_7' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%c_addr_8 = getelementptr [11 x i32]* %c, i64 0, i64 2" [fir.c:81]   --->   Operation 49 'getelementptr' 'c_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [2/2] (2.15ns)   --->   "%c_load_8 = load i32* %c_addr_8, align 4" [fir.c:81]   --->   Operation 50 'load' 'c_load_8' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_5 : Operation 51 [1/1] (2.70ns)   --->   "%tmp1 = add i32 %tmp_6, %tmp_6_1" [fir.c:81]   --->   Operation 51 'add' 'tmp1' <Predicate = true> <Delay = 2.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.50>
ST_6 : Operation 52 [1/2] (2.15ns)   --->   "%c_load_7 = load i32* %c_addr_7, align 4" [fir.c:81]   --->   Operation 52 'load' 'c_load_7' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_6 : Operation 53 [1/2] (2.15ns)   --->   "%c_load_8 = load i32* %c_addr_8, align 4" [fir.c:81]   --->   Operation 53 'load' 'c_load_8' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%c_addr_9 = getelementptr [11 x i32]* %c, i64 0, i64 1" [fir.c:81]   --->   Operation 54 'getelementptr' 'c_addr_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 55 [2/2] (2.15ns)   --->   "%c_load_9 = load i32* %c_addr_9, align 4" [fir.c:81]   --->   Operation 55 'load' 'c_load_9' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_6 : Operation 56 [1/1] (0.00ns)   --->   "%c_addr_10 = getelementptr [11 x i32]* %c, i64 0, i64 0" [fir.c:81]   --->   Operation 56 'getelementptr' 'c_addr_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 57 [2/2] (2.15ns)   --->   "%c_load_10 = load i32* %c_addr_10, align 4" [fir.c:81]   --->   Operation 57 'load' 'c_load_10' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_6 : Operation 58 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp3 = add i32 %tmp_6_3, %tmp_6_4" [fir.c:81]   --->   Operation 58 'add' 'tmp3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 59 [1/1] (4.50ns) (root node of TernaryAdder)   --->   "%tmp2 = add i32 %tmp3, %tmp_6_2" [fir.c:81]   --->   Operation 59 'add' 'tmp2' <Predicate = true> <Delay = 4.50> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 8.47>
ST_7 : Operation 60 [1/1] (0.00ns)   --->   "%shift_reg_4_load = load i32* @shift_reg_4, align 16" [fir.c:72]   --->   Operation 60 'load' 'shift_reg_4_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 61 [1/1] (0.00ns)   --->   "store i32 %shift_reg_4_load, i32* @shift_reg_5, align 4" [fir.c:72]   --->   Operation 61 'store' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 62 [1/1] (0.00ns)   --->   "%shift_reg_3_load = load i32* @shift_reg_3, align 4" [fir.c:72]   --->   Operation 62 'load' 'shift_reg_3_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 63 [1/1] (0.00ns)   --->   "store i32 %shift_reg_3_load, i32* @shift_reg_4, align 16" [fir.c:72]   --->   Operation 63 'store' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (0.00ns)   --->   "%shift_reg_2_load = load i32* @shift_reg_2, align 8" [fir.c:72]   --->   Operation 64 'load' 'shift_reg_2_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 65 [1/1] (0.00ns)   --->   "store i32 %shift_reg_2_load, i32* @shift_reg_3, align 4" [fir.c:72]   --->   Operation 65 'store' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (8.47ns)   --->   "%tmp_6_5 = mul nsw i32 %shift_reg_4_load, %c_load_5" [fir.c:81]   --->   Operation 66 'mul' 'tmp_6_5' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 67 [1/1] (8.47ns)   --->   "%tmp_6_6 = mul nsw i32 %shift_reg_3_load, %c_load_6" [fir.c:81]   --->   Operation 67 'mul' 'tmp_6_6' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 68 [1/1] (8.47ns)   --->   "%tmp_6_7 = mul nsw i32 %shift_reg_2_load, %c_load_7" [fir.c:81]   --->   Operation 68 'mul' 'tmp_6_7' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 69 [1/2] (2.15ns)   --->   "%c_load_9 = load i32* %c_addr_9, align 4" [fir.c:81]   --->   Operation 69 'load' 'c_load_9' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_7 : Operation 70 [1/2] (2.15ns)   --->   "%c_load_10 = load i32* %c_addr_10, align 4" [fir.c:81]   --->   Operation 70 'load' 'c_load_10' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>

State 8 <SV = 7> <Delay = 8.47>
ST_8 : Operation 71 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %x) nounwind"   --->   Operation 71 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 72 [1/1] (0.00ns)   --->   "%shift_reg_1_load = load i32* @shift_reg_1, align 4" [fir.c:72]   --->   Operation 72 'load' 'shift_reg_1_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 73 [1/1] (0.00ns)   --->   "store i32 %shift_reg_1_load, i32* @shift_reg_2, align 8" [fir.c:72]   --->   Operation 73 'store' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 74 [1/1] (0.00ns)   --->   "%shift_reg_0_load = load i32* @shift_reg_0, align 16" [fir.c:72]   --->   Operation 74 'load' 'shift_reg_0_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 75 [1/1] (0.00ns)   --->   "store i32 %shift_reg_0_load, i32* @shift_reg_1, align 4" [fir.c:72]   --->   Operation 75 'store' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 76 [1/1] (0.00ns)   --->   "store i32 %x_read, i32* @shift_reg_0, align 16" [fir.c:74]   --->   Operation 76 'store' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 77 [1/1] (8.47ns)   --->   "%tmp_6_8 = mul nsw i32 %shift_reg_1_load, %c_load_8" [fir.c:81]   --->   Operation 77 'mul' 'tmp_6_8' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 78 [1/1] (8.47ns)   --->   "%tmp_6_9 = mul nsw i32 %shift_reg_0_load, %c_load_9" [fir.c:81]   --->   Operation 78 'mul' 'tmp_6_9' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 79 [1/1] (8.47ns)   --->   "%tmp_6_s = mul nsw i32 %c_load_10, %x_read" [fir.c:81]   --->   Operation 79 'mul' 'tmp_6_s' <Predicate = true> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 80 [1/1] (2.70ns)   --->   "%tmp6 = add i32 %tmp_6_6, %tmp_6_7" [fir.c:81]   --->   Operation 80 'add' 'tmp6' <Predicate = true> <Delay = 2.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 4.50>
ST_9 : Operation 81 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp8 = add i32 %tmp_6_9, %tmp_6_s" [fir.c:81]   --->   Operation 81 'add' 'tmp8' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 82 [1/1] (4.50ns) (root node of TernaryAdder)   --->   "%tmp7 = add i32 %tmp8, %tmp_6_8" [fir.c:81]   --->   Operation 82 'add' 'tmp7' <Predicate = true> <Delay = 4.50> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 10 <SV = 9> <Delay = 4.50>
ST_10 : Operation 83 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp5 = add i32 %tmp6, %tmp_6_5" [fir.c:81]   --->   Operation 83 'add' 'tmp5' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 84 [1/1] (4.50ns) (root node of TernaryAdder)   --->   "%tmp4 = add i32 %tmp7, %tmp5" [fir.c:81]   --->   Operation 84 'add' 'tmp4' <Predicate = true> <Delay = 4.50> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 11 <SV = 10> <Delay = 4.50>
ST_11 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %y) nounwind, !map !7"   --->   Operation 85 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 86 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([11 x i32]* %c) nounwind, !map !13"   --->   Operation 86 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 87 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %x) nounwind, !map !19"   --->   Operation 87 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 88 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @fir_str) nounwind"   --->   Operation 88 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 89 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp = add i32 %tmp2, %tmp1" [fir.c:81]   --->   Operation 89 'add' 'tmp' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 90 [1/1] (4.50ns) (root node of TernaryAdder)   --->   "%acc_1_s = add nsw i32 %tmp4, %tmp" [fir.c:81]   --->   Operation 90 'add' 'acc_1_s' <Predicate = true> <Delay = 4.50> <Core = "TAddSub">   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 91 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %y, i32 %acc_1_s) nounwind" [fir.c:83]   --->   Operation 91 'write' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 92 [1/1] (0.00ns)   --->   "ret void" [fir.c:84]   --->   Operation 92 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.15ns
The critical path consists of the following:
	'getelementptr' operation ('c_addr', fir.c:81) [39]  (0 ns)
	'load' operation ('c_load', fir.c:81) on array 'c' [40]  (2.15 ns)

 <State 2>: 2.15ns
The critical path consists of the following:
	'load' operation ('c_load', fir.c:81) on array 'c' [40]  (2.15 ns)

 <State 3>: 2.15ns
The critical path consists of the following:
	'load' operation ('c_load_1', fir.c:81) on array 'c' [43]  (2.15 ns)

 <State 4>: 8.47ns
The critical path consists of the following:
	'load' operation ('shift_reg_9_load', fir.c:72) on static variable 'shift_reg_9' [19]  (0 ns)
	'mul' operation ('tmp_6', fir.c:81) [41]  (8.47 ns)

 <State 5>: 8.47ns
The critical path consists of the following:
	'load' operation ('shift_reg_7_load', fir.c:72) on static variable 'shift_reg_7' [22]  (0 ns)
	'mul' operation ('tmp_6_2', fir.c:81) [47]  (8.47 ns)

 <State 6>: 4.5ns
The critical path consists of the following:
	'add' operation ('tmp3', fir.c:81) [73]  (0 ns)
	'add' operation ('tmp2', fir.c:81) [74]  (4.5 ns)

 <State 7>: 8.47ns
The critical path consists of the following:
	'load' operation ('shift_reg_4_load', fir.c:72) on static variable 'shift_reg_4' [28]  (0 ns)
	'mul' operation ('tmp_6_5', fir.c:81) [56]  (8.47 ns)

 <State 8>: 8.47ns
The critical path consists of the following:
	wire read on port 'x' [18]  (0 ns)
	'mul' operation ('tmp_6_s', fir.c:81) [71]  (8.47 ns)

 <State 9>: 4.5ns
The critical path consists of the following:
	'add' operation ('tmp8', fir.c:81) [78]  (0 ns)
	'add' operation ('tmp7', fir.c:81) [79]  (4.5 ns)

 <State 10>: 4.5ns
The critical path consists of the following:
	'add' operation ('tmp5', fir.c:81) [77]  (0 ns)
	'add' operation ('tmp4', fir.c:81) [80]  (4.5 ns)

 <State 11>: 4.5ns
The critical path consists of the following:
	'add' operation ('tmp', fir.c:81) [75]  (0 ns)
	'add' operation ('acc_1_s', fir.c:81) [81]  (4.5 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
