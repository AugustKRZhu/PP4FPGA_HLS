// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fir.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fir::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fir::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> fir::ap_ST_fsm_state1 = "1";
const sc_lv<11> fir::ap_ST_fsm_state2 = "10";
const sc_lv<11> fir::ap_ST_fsm_state3 = "100";
const sc_lv<11> fir::ap_ST_fsm_state4 = "1000";
const sc_lv<11> fir::ap_ST_fsm_state5 = "10000";
const sc_lv<11> fir::ap_ST_fsm_state6 = "100000";
const sc_lv<11> fir::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> fir::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> fir::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> fir::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> fir::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> fir::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fir::ap_const_lv32_1 = "1";
const sc_lv<32> fir::ap_const_lv32_3 = "11";
const sc_lv<32> fir::ap_const_lv32_4 = "100";
const sc_lv<32> fir::ap_const_lv32_6 = "110";
const sc_lv<32> fir::ap_const_lv32_2 = "10";
const sc_lv<32> fir::ap_const_lv32_5 = "101";
const sc_lv<32> fir::ap_const_lv32_7 = "111";
const sc_lv<32> fir::ap_const_lv32_8 = "1000";
const sc_lv<32> fir::ap_const_lv32_9 = "1001";
const sc_lv<64> fir::ap_const_lv64_A = "1010";
const sc_lv<64> fir::ap_const_lv64_9 = "1001";
const sc_lv<64> fir::ap_const_lv64_8 = "1000";
const sc_lv<64> fir::ap_const_lv64_7 = "111";
const sc_lv<64> fir::ap_const_lv64_6 = "110";
const sc_lv<64> fir::ap_const_lv64_5 = "101";
const sc_lv<64> fir::ap_const_lv64_4 = "100";
const sc_lv<64> fir::ap_const_lv64_3 = "11";
const sc_lv<64> fir::ap_const_lv64_2 = "10";
const sc_lv<64> fir::ap_const_lv64_1 = "1";
const sc_lv<64> fir::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> fir::ap_const_lv32_A = "1010";
const bool fir::ap_const_boolean_1 = true;

fir::fir(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_c_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_c_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_c_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp1_fu_266_p2);
    sensitive << ( tmp_6_reg_427 );
    sensitive << ( tmp_6_1_reg_432 );

    SC_METHOD(thread_tmp2_fu_274_p2);
    sensitive << ( tmp_6_2_reg_447 );
    sensitive << ( tmp3_fu_270_p2 );

    SC_METHOD(thread_tmp3_fu_270_p2);
    sensitive << ( tmp_6_3_reg_452 );
    sensitive << ( tmp_6_4_reg_457 );

    SC_METHOD(thread_tmp4_fu_387_p2);
    sensitive << ( tmp7_reg_532 );
    sensitive << ( tmp5_fu_383_p2 );

    SC_METHOD(thread_tmp5_fu_383_p2);
    sensitive << ( tmp_6_5_reg_497 );
    sensitive << ( tmp6_reg_527 );

    SC_METHOD(thread_tmp6_fu_370_p2);
    sensitive << ( tmp_6_6_reg_502 );
    sensitive << ( tmp_6_7_reg_507 );

    SC_METHOD(thread_tmp7_fu_378_p2);
    sensitive << ( tmp_6_8_reg_512 );
    sensitive << ( tmp8_fu_374_p2 );

    SC_METHOD(thread_tmp8_fu_374_p2);
    sensitive << ( tmp_6_9_reg_517 );
    sensitive << ( tmp_6_s_reg_522 );

    SC_METHOD(thread_tmp_6_1_fu_212_p0);
    sensitive << ( shift_reg_8 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_6_1_fu_212_p2);
    sensitive << ( reg_184 );
    sensitive << ( tmp_6_1_fu_212_p0 );

    SC_METHOD(thread_tmp_6_2_fu_248_p0);
    sensitive << ( shift_reg_7 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_6_2_fu_248_p2);
    sensitive << ( reg_188 );
    sensitive << ( tmp_6_2_fu_248_p0 );

    SC_METHOD(thread_tmp_6_3_fu_254_p0);
    sensitive << ( shift_reg_6 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_6_3_fu_254_p2);
    sensitive << ( reg_179 );
    sensitive << ( tmp_6_3_fu_254_p0 );

    SC_METHOD(thread_tmp_6_4_fu_260_p0);
    sensitive << ( shift_reg_5 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_6_4_fu_260_p2);
    sensitive << ( reg_184 );
    sensitive << ( tmp_6_4_fu_260_p0 );

    SC_METHOD(thread_tmp_6_5_fu_309_p0);
    sensitive << ( shift_reg_4 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_6_5_fu_309_p2);
    sensitive << ( reg_179 );
    sensitive << ( tmp_6_5_fu_309_p0 );

    SC_METHOD(thread_tmp_6_6_fu_315_p0);
    sensitive << ( shift_reg_3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_6_6_fu_315_p2);
    sensitive << ( reg_184 );
    sensitive << ( tmp_6_6_fu_315_p0 );

    SC_METHOD(thread_tmp_6_7_fu_321_p0);
    sensitive << ( shift_reg_2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_6_7_fu_321_p2);
    sensitive << ( reg_188 );
    sensitive << ( tmp_6_7_fu_321_p0 );

    SC_METHOD(thread_tmp_6_8_fu_353_p0);
    sensitive << ( shift_reg_1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_6_8_fu_353_p2);
    sensitive << ( c_load_8_reg_477 );
    sensitive << ( tmp_6_8_fu_353_p0 );

    SC_METHOD(thread_tmp_6_9_fu_358_p0);
    sensitive << ( shift_reg_0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_6_9_fu_358_p2);
    sensitive << ( reg_179 );
    sensitive << ( tmp_6_9_fu_358_p0 );

    SC_METHOD(thread_tmp_6_fu_206_p0);
    sensitive << ( shift_reg_9 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_6_fu_206_p2);
    sensitive << ( reg_179 );
    sensitive << ( tmp_6_fu_206_p0 );

    SC_METHOD(thread_tmp_6_s_fu_364_p1);
    sensitive << ( x );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_6_s_fu_364_p2);
    sensitive << ( reg_184 );
    sensitive << ( tmp_6_s_fu_364_p1 );

    SC_METHOD(thread_tmp_fu_392_p2);
    sensitive << ( tmp1_reg_472 );
    sensitive << ( tmp2_reg_492 );

    SC_METHOD(thread_y);
    sensitive << ( tmp4_reg_537 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_fu_392_p2 );

    SC_METHOD(thread_y_ap_vld);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000001";
    shift_reg_9 = "00000000000000000000000000000000";
    shift_reg_8 = "00000000000000000000000000000000";
    shift_reg_7 = "00000000000000000000000000000000";
    shift_reg_6 = "00000000000000000000000000000000";
    shift_reg_5 = "00000000000000000000000000000000";
    shift_reg_4 = "00000000000000000000000000000000";
    shift_reg_3 = "00000000000000000000000000000000";
    shift_reg_2 = "00000000000000000000000000000000";
    shift_reg_1 = "00000000000000000000000000000000";
    shift_reg_0 = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fir_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, y_ap_vld, "(port)y_ap_vld");
    sc_trace(mVcdFile, c_address0, "(port)c_address0");
    sc_trace(mVcdFile, c_ce0, "(port)c_ce0");
    sc_trace(mVcdFile, c_q0, "(port)c_q0");
    sc_trace(mVcdFile, c_address1, "(port)c_address1");
    sc_trace(mVcdFile, c_ce1, "(port)c_ce1");
    sc_trace(mVcdFile, c_q1, "(port)c_q1");
    sc_trace(mVcdFile, x, "(port)x");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, shift_reg_9, "shift_reg_9");
    sc_trace(mVcdFile, shift_reg_8, "shift_reg_8");
    sc_trace(mVcdFile, shift_reg_7, "shift_reg_7");
    sc_trace(mVcdFile, shift_reg_6, "shift_reg_6");
    sc_trace(mVcdFile, shift_reg_5, "shift_reg_5");
    sc_trace(mVcdFile, shift_reg_4, "shift_reg_4");
    sc_trace(mVcdFile, shift_reg_3, "shift_reg_3");
    sc_trace(mVcdFile, shift_reg_2, "shift_reg_2");
    sc_trace(mVcdFile, shift_reg_1, "shift_reg_1");
    sc_trace(mVcdFile, shift_reg_0, "shift_reg_0");
    sc_trace(mVcdFile, reg_179, "reg_179");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, reg_184, "reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, reg_188, "reg_188");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_6_fu_206_p2, "tmp_6_fu_206_p2");
    sc_trace(mVcdFile, tmp_6_reg_427, "tmp_6_reg_427");
    sc_trace(mVcdFile, tmp_6_1_fu_212_p2, "tmp_6_1_fu_212_p2");
    sc_trace(mVcdFile, tmp_6_1_reg_432, "tmp_6_1_reg_432");
    sc_trace(mVcdFile, tmp_6_2_fu_248_p2, "tmp_6_2_fu_248_p2");
    sc_trace(mVcdFile, tmp_6_2_reg_447, "tmp_6_2_reg_447");
    sc_trace(mVcdFile, tmp_6_3_fu_254_p2, "tmp_6_3_fu_254_p2");
    sc_trace(mVcdFile, tmp_6_3_reg_452, "tmp_6_3_reg_452");
    sc_trace(mVcdFile, tmp_6_4_fu_260_p2, "tmp_6_4_fu_260_p2");
    sc_trace(mVcdFile, tmp_6_4_reg_457, "tmp_6_4_reg_457");
    sc_trace(mVcdFile, tmp1_fu_266_p2, "tmp1_fu_266_p2");
    sc_trace(mVcdFile, tmp1_reg_472, "tmp1_reg_472");
    sc_trace(mVcdFile, c_load_8_reg_477, "c_load_8_reg_477");
    sc_trace(mVcdFile, tmp2_fu_274_p2, "tmp2_fu_274_p2");
    sc_trace(mVcdFile, tmp2_reg_492, "tmp2_reg_492");
    sc_trace(mVcdFile, tmp_6_5_fu_309_p2, "tmp_6_5_fu_309_p2");
    sc_trace(mVcdFile, tmp_6_5_reg_497, "tmp_6_5_reg_497");
    sc_trace(mVcdFile, tmp_6_6_fu_315_p2, "tmp_6_6_fu_315_p2");
    sc_trace(mVcdFile, tmp_6_6_reg_502, "tmp_6_6_reg_502");
    sc_trace(mVcdFile, tmp_6_7_fu_321_p2, "tmp_6_7_fu_321_p2");
    sc_trace(mVcdFile, tmp_6_7_reg_507, "tmp_6_7_reg_507");
    sc_trace(mVcdFile, tmp_6_8_fu_353_p2, "tmp_6_8_fu_353_p2");
    sc_trace(mVcdFile, tmp_6_8_reg_512, "tmp_6_8_reg_512");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_6_9_fu_358_p2, "tmp_6_9_fu_358_p2");
    sc_trace(mVcdFile, tmp_6_9_reg_517, "tmp_6_9_reg_517");
    sc_trace(mVcdFile, tmp_6_s_fu_364_p2, "tmp_6_s_fu_364_p2");
    sc_trace(mVcdFile, tmp_6_s_reg_522, "tmp_6_s_reg_522");
    sc_trace(mVcdFile, tmp6_fu_370_p2, "tmp6_fu_370_p2");
    sc_trace(mVcdFile, tmp6_reg_527, "tmp6_reg_527");
    sc_trace(mVcdFile, tmp7_fu_378_p2, "tmp7_fu_378_p2");
    sc_trace(mVcdFile, tmp7_reg_532, "tmp7_reg_532");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp4_fu_387_p2, "tmp4_fu_387_p2");
    sc_trace(mVcdFile, tmp4_reg_537, "tmp4_reg_537");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_6_fu_206_p0, "tmp_6_fu_206_p0");
    sc_trace(mVcdFile, tmp_6_1_fu_212_p0, "tmp_6_1_fu_212_p0");
    sc_trace(mVcdFile, tmp_6_2_fu_248_p0, "tmp_6_2_fu_248_p0");
    sc_trace(mVcdFile, tmp_6_3_fu_254_p0, "tmp_6_3_fu_254_p0");
    sc_trace(mVcdFile, tmp_6_4_fu_260_p0, "tmp_6_4_fu_260_p0");
    sc_trace(mVcdFile, tmp3_fu_270_p2, "tmp3_fu_270_p2");
    sc_trace(mVcdFile, tmp_6_5_fu_309_p0, "tmp_6_5_fu_309_p0");
    sc_trace(mVcdFile, tmp_6_6_fu_315_p0, "tmp_6_6_fu_315_p0");
    sc_trace(mVcdFile, tmp_6_7_fu_321_p0, "tmp_6_7_fu_321_p0");
    sc_trace(mVcdFile, tmp_6_8_fu_353_p0, "tmp_6_8_fu_353_p0");
    sc_trace(mVcdFile, tmp_6_9_fu_358_p0, "tmp_6_9_fu_358_p0");
    sc_trace(mVcdFile, tmp_6_s_fu_364_p1, "tmp_6_s_fu_364_p1");
    sc_trace(mVcdFile, tmp8_fu_374_p2, "tmp8_fu_374_p2");
    sc_trace(mVcdFile, tmp5_fu_383_p2, "tmp5_fu_383_p2");
    sc_trace(mVcdFile, tmp_fu_392_p2, "tmp_fu_392_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("fir.hdltvin.dat");
    mHdltvoutHandle.open("fir.hdltvout.dat");
}

fir::~fir() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void fir::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        reg_179 = c_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        reg_179 = c_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_load_8_reg_477 = c_q0.read();
        tmp2_reg_492 = tmp2_fu_274_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        reg_184 = c_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_188 = c_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        shift_reg_0 = x.read();
        shift_reg_1 = shift_reg_0.read();
        shift_reg_2 = shift_reg_1.read();
        tmp6_reg_527 = tmp6_fu_370_p2.read();
        tmp_6_8_reg_512 = tmp_6_8_fu_353_p2.read();
        tmp_6_9_reg_517 = tmp_6_9_fu_358_p2.read();
        tmp_6_s_reg_522 = tmp_6_s_fu_364_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        shift_reg_3 = shift_reg_2.read();
        shift_reg_4 = shift_reg_3.read();
        shift_reg_5 = shift_reg_4.read();
        tmp_6_5_reg_497 = tmp_6_5_fu_309_p2.read();
        tmp_6_6_reg_502 = tmp_6_6_fu_315_p2.read();
        tmp_6_7_reg_507 = tmp_6_7_fu_321_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        shift_reg_6 = shift_reg_5.read();
        shift_reg_7 = shift_reg_6.read();
        shift_reg_8 = shift_reg_7.read();
        tmp1_reg_472 = tmp1_fu_266_p2.read();
        tmp_6_2_reg_447 = tmp_6_2_fu_248_p2.read();
        tmp_6_3_reg_452 = tmp_6_3_fu_254_p2.read();
        tmp_6_4_reg_457 = tmp_6_4_fu_260_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        shift_reg_9 = shift_reg_8.read();
        tmp_6_1_reg_432 = tmp_6_1_fu_212_p2.read();
        tmp_6_reg_427 = tmp_6_fu_206_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp4_reg_537 = tmp4_fu_387_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp7_reg_532 = tmp7_fu_378_p2.read();
    }
}

void fir::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fir::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void fir::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void fir::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fir::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fir::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fir::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fir::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fir::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void fir::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void fir::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void fir::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fir::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fir::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fir::thread_c_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        c_address0 =  (sc_lv<4>) (ap_const_lv64_A);
    } else {
        c_address0 = "XXXX";
    }
}

void fir::thread_c_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_address1 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_address1 =  (sc_lv<4>) (ap_const_lv64_8);
    } else {
        c_address1 = "XXXX";
    }
}

void fir::thread_c_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void fir::thread_c_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        c_ce1 = ap_const_logic_1;
    } else {
        c_ce1 = ap_const_logic_0;
    }
}

void fir::thread_tmp1_fu_266_p2() {
    tmp1_fu_266_p2 = (!tmp_6_reg_427.read().is_01() || !tmp_6_1_reg_432.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_reg_427.read()) + sc_biguint<32>(tmp_6_1_reg_432.read()));
}

void fir::thread_tmp2_fu_274_p2() {
    tmp2_fu_274_p2 = (!tmp3_fu_270_p2.read().is_01() || !tmp_6_2_reg_447.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp3_fu_270_p2.read()) + sc_biguint<32>(tmp_6_2_reg_447.read()));
}

void fir::thread_tmp3_fu_270_p2() {
    tmp3_fu_270_p2 = (!tmp_6_3_reg_452.read().is_01() || !tmp_6_4_reg_457.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_3_reg_452.read()) + sc_biguint<32>(tmp_6_4_reg_457.read()));
}

void fir::thread_tmp4_fu_387_p2() {
    tmp4_fu_387_p2 = (!tmp7_reg_532.read().is_01() || !tmp5_fu_383_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp7_reg_532.read()) + sc_biguint<32>(tmp5_fu_383_p2.read()));
}

void fir::thread_tmp5_fu_383_p2() {
    tmp5_fu_383_p2 = (!tmp6_reg_527.read().is_01() || !tmp_6_5_reg_497.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp6_reg_527.read()) + sc_biguint<32>(tmp_6_5_reg_497.read()));
}

void fir::thread_tmp6_fu_370_p2() {
    tmp6_fu_370_p2 = (!tmp_6_6_reg_502.read().is_01() || !tmp_6_7_reg_507.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_6_reg_502.read()) + sc_biguint<32>(tmp_6_7_reg_507.read()));
}

void fir::thread_tmp7_fu_378_p2() {
    tmp7_fu_378_p2 = (!tmp8_fu_374_p2.read().is_01() || !tmp_6_8_reg_512.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp8_fu_374_p2.read()) + sc_biguint<32>(tmp_6_8_reg_512.read()));
}

void fir::thread_tmp8_fu_374_p2() {
    tmp8_fu_374_p2 = (!tmp_6_9_reg_517.read().is_01() || !tmp_6_s_reg_522.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_9_reg_517.read()) + sc_biguint<32>(tmp_6_s_reg_522.read()));
}

void fir::thread_tmp_6_1_fu_212_p0() {
    tmp_6_1_fu_212_p0 = shift_reg_8.read();
}

void fir::thread_tmp_6_1_fu_212_p2() {
    tmp_6_1_fu_212_p2 = (!tmp_6_1_fu_212_p0.read().is_01() || !reg_184.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_1_fu_212_p0.read()) * sc_bigint<32>(reg_184.read());
}

void fir::thread_tmp_6_2_fu_248_p0() {
    tmp_6_2_fu_248_p0 = shift_reg_7.read();
}

void fir::thread_tmp_6_2_fu_248_p2() {
    tmp_6_2_fu_248_p2 = (!tmp_6_2_fu_248_p0.read().is_01() || !reg_188.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_2_fu_248_p0.read()) * sc_bigint<32>(reg_188.read());
}

void fir::thread_tmp_6_3_fu_254_p0() {
    tmp_6_3_fu_254_p0 = shift_reg_6.read();
}

void fir::thread_tmp_6_3_fu_254_p2() {
    tmp_6_3_fu_254_p2 = (!tmp_6_3_fu_254_p0.read().is_01() || !reg_179.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_3_fu_254_p0.read()) * sc_bigint<32>(reg_179.read());
}

void fir::thread_tmp_6_4_fu_260_p0() {
    tmp_6_4_fu_260_p0 = shift_reg_5.read();
}

void fir::thread_tmp_6_4_fu_260_p2() {
    tmp_6_4_fu_260_p2 = (!tmp_6_4_fu_260_p0.read().is_01() || !reg_184.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_4_fu_260_p0.read()) * sc_bigint<32>(reg_184.read());
}

void fir::thread_tmp_6_5_fu_309_p0() {
    tmp_6_5_fu_309_p0 = shift_reg_4.read();
}

void fir::thread_tmp_6_5_fu_309_p2() {
    tmp_6_5_fu_309_p2 = (!tmp_6_5_fu_309_p0.read().is_01() || !reg_179.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_5_fu_309_p0.read()) * sc_bigint<32>(reg_179.read());
}

void fir::thread_tmp_6_6_fu_315_p0() {
    tmp_6_6_fu_315_p0 = shift_reg_3.read();
}

void fir::thread_tmp_6_6_fu_315_p2() {
    tmp_6_6_fu_315_p2 = (!tmp_6_6_fu_315_p0.read().is_01() || !reg_184.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_6_fu_315_p0.read()) * sc_bigint<32>(reg_184.read());
}

void fir::thread_tmp_6_7_fu_321_p0() {
    tmp_6_7_fu_321_p0 = shift_reg_2.read();
}

void fir::thread_tmp_6_7_fu_321_p2() {
    tmp_6_7_fu_321_p2 = (!tmp_6_7_fu_321_p0.read().is_01() || !reg_188.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_7_fu_321_p0.read()) * sc_bigint<32>(reg_188.read());
}

void fir::thread_tmp_6_8_fu_353_p0() {
    tmp_6_8_fu_353_p0 = shift_reg_1.read();
}

void fir::thread_tmp_6_8_fu_353_p2() {
    tmp_6_8_fu_353_p2 = (!tmp_6_8_fu_353_p0.read().is_01() || !c_load_8_reg_477.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_8_fu_353_p0.read()) * sc_bigint<32>(c_load_8_reg_477.read());
}

void fir::thread_tmp_6_9_fu_358_p0() {
    tmp_6_9_fu_358_p0 = shift_reg_0.read();
}

void fir::thread_tmp_6_9_fu_358_p2() {
    tmp_6_9_fu_358_p2 = (!tmp_6_9_fu_358_p0.read().is_01() || !reg_179.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_9_fu_358_p0.read()) * sc_bigint<32>(reg_179.read());
}

void fir::thread_tmp_6_fu_206_p0() {
    tmp_6_fu_206_p0 = shift_reg_9.read();
}

void fir::thread_tmp_6_fu_206_p2() {
    tmp_6_fu_206_p2 = (!tmp_6_fu_206_p0.read().is_01() || !reg_179.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_fu_206_p0.read()) * sc_bigint<32>(reg_179.read());
}

void fir::thread_tmp_6_s_fu_364_p1() {
    tmp_6_s_fu_364_p1 = x.read();
}

void fir::thread_tmp_6_s_fu_364_p2() {
    tmp_6_s_fu_364_p2 = (!reg_184.read().is_01() || !tmp_6_s_fu_364_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_184.read()) * sc_bigint<32>(tmp_6_s_fu_364_p1.read());
}

void fir::thread_tmp_fu_392_p2() {
    tmp_fu_392_p2 = (!tmp2_reg_492.read().is_01() || !tmp1_reg_472.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp2_reg_492.read()) + sc_biguint<32>(tmp1_reg_472.read()));
}

void fir::thread_y() {
    y = (!tmp4_reg_537.read().is_01() || !tmp_fu_392_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp4_reg_537.read()) + sc_biguint<32>(tmp_fu_392_p2.read()));
}

void fir::thread_y_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        y_ap_vld = ap_const_logic_1;
    } else {
        y_ap_vld = ap_const_logic_0;
    }
}

void fir::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void fir::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y\" :  \"" << y.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_ap_vld\" :  \"" << y_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_address0\" :  \"" << c_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_ce0\" :  \"" << c_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_q0\" :  \"" << c_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_address1\" :  \"" << c_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_ce1\" :  \"" << c_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_q1\" :  \"" << c_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x\" :  \"" << x.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

