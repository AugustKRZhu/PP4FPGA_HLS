// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fir.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fir::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fir::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> fir::ap_ST_fsm_state1 = "1";
const sc_lv<7> fir::ap_ST_fsm_state2 = "10";
const sc_lv<7> fir::ap_ST_fsm_state3 = "100";
const sc_lv<7> fir::ap_ST_fsm_state4 = "1000";
const sc_lv<7> fir::ap_ST_fsm_pp0_stage0 = "10000";
const sc_lv<7> fir::ap_ST_fsm_pp0_stage1 = "100000";
const sc_lv<7> fir::ap_ST_fsm_state9 = "1000000";
const sc_lv<32> fir::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool fir::ap_const_boolean_1 = true;
const sc_lv<32> fir::ap_const_lv32_1 = "1";
const sc_lv<1> fir::ap_const_lv1_0 = "0";
const sc_lv<4> fir::ap_const_lv4_9 = "1001";
const sc_lv<1> fir::ap_const_lv1_1 = "1";
const sc_lv<4> fir::ap_const_lv4_8 = "1000";
const sc_lv<4> fir::ap_const_lv4_7 = "111";
const sc_lv<4> fir::ap_const_lv4_6 = "110";
const sc_lv<4> fir::ap_const_lv4_5 = "101";
const sc_lv<4> fir::ap_const_lv4_4 = "100";
const sc_lv<4> fir::ap_const_lv4_3 = "11";
const sc_lv<4> fir::ap_const_lv4_2 = "10";
const sc_lv<4> fir::ap_const_lv4_1 = "1";
const sc_lv<32> fir::ap_const_lv32_4 = "100";
const bool fir::ap_const_boolean_0 = false;
const sc_lv<32> fir::ap_const_lv32_5 = "101";
const sc_lv<4> fir::ap_const_lv4_A = "1010";
const sc_lv<32> fir::ap_const_lv32_3 = "11";
const sc_lv<5> fir::ap_const_lv5_A = "1010";
const sc_lv<4> fir::ap_const_lv4_0 = "0000";
const sc_lv<32> fir::ap_const_lv32_2 = "10";
const sc_lv<32> fir::ap_const_lv32_6 = "110";
const sc_lv<4> fir::ap_const_lv4_F = "1111";
const sc_lv<5> fir::ap_const_lv5_1F = "11111";

fir::fir(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_1_fu_417_p2);
    sensitive << ( acc_reg_161 );
    sensitive << ( tmp_6_reg_470 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_434);
    sensitive << ( tmp_1_fu_389_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_condition_443);
    sensitive << ( tmp_3_fu_402_p1 );

    SC_METHOD(thread_ap_condition_455);
    sensitive << ( ap_phi_mux_i_phi_fu_128_p4 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state5);
    sensitive << ( tmp_1_fu_389_p3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_1_phi_fu_178_p4);
    sensitive << ( i_1_reg_174 );
    sensitive << ( tmp_1_reg_447 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_3_reg_465 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_128_p4);
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_c_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_5_fu_397_p1 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_2_fu_314_p2);
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_i_3_fu_406_p2);
    sensitive << ( i_1_reg_174 );

    SC_METHOD(thread_tmp_1_fu_389_p3);
    sensitive << ( ap_phi_mux_i_1_phi_fu_178_p4 );

    SC_METHOD(thread_tmp_3_fu_402_p1);
    sensitive << ( ap_phi_mux_i_1_phi_fu_178_p4 );

    SC_METHOD(thread_tmp_5_fu_397_p1);
    sensitive << ( ap_phi_mux_i_1_phi_fu_178_p4 );

    SC_METHOD(thread_tmp_6_fu_412_p2);
    sensitive << ( UnifiedRetVal_i_reg_186 );
    sensitive << ( c_load_reg_460 );

    SC_METHOD(thread_tmp_fu_308_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_y);
    sensitive << ( acc_reg_161 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_y_ap_vld);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_308_p2 );
    sensitive << ( tmp_1_fu_389_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000001";
    shift_reg_0 = "00000000000000000000000000000000";
    shift_reg_10 = "00000000000000000000000000000000";
    shift_reg_1 = "00000000000000000000000000000000";
    shift_reg_2 = "00000000000000000000000000000000";
    shift_reg_3 = "00000000000000000000000000000000";
    shift_reg_4 = "00000000000000000000000000000000";
    shift_reg_5 = "00000000000000000000000000000000";
    shift_reg_6 = "00000000000000000000000000000000";
    shift_reg_7 = "00000000000000000000000000000000";
    shift_reg_8 = "00000000000000000000000000000000";
    shift_reg_9 = "00000000000000000000000000000000";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fir_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, y_ap_vld, "(port)y_ap_vld");
    sc_trace(mVcdFile, c_address0, "(port)c_address0");
    sc_trace(mVcdFile, c_ce0, "(port)c_ce0");
    sc_trace(mVcdFile, c_q0, "(port)c_q0");
    sc_trace(mVcdFile, x, "(port)x");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, shift_reg_0, "shift_reg_0");
    sc_trace(mVcdFile, shift_reg_10, "shift_reg_10");
    sc_trace(mVcdFile, shift_reg_1, "shift_reg_1");
    sc_trace(mVcdFile, shift_reg_2, "shift_reg_2");
    sc_trace(mVcdFile, shift_reg_3, "shift_reg_3");
    sc_trace(mVcdFile, shift_reg_4, "shift_reg_4");
    sc_trace(mVcdFile, shift_reg_5, "shift_reg_5");
    sc_trace(mVcdFile, shift_reg_6, "shift_reg_6");
    sc_trace(mVcdFile, shift_reg_7, "shift_reg_7");
    sc_trace(mVcdFile, shift_reg_8, "shift_reg_8");
    sc_trace(mVcdFile, shift_reg_9, "shift_reg_9");
    sc_trace(mVcdFile, acc_reg_161, "acc_reg_161");
    sc_trace(mVcdFile, i_1_reg_174, "i_1_reg_174");
    sc_trace(mVcdFile, UnifiedRetVal_i_reg_186, "UnifiedRetVal_i_reg_186");
    sc_trace(mVcdFile, reg_250, "reg_250");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_308_p2, "tmp_fu_308_p2");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_128_p4, "ap_phi_mux_i_phi_fu_128_p4");
    sc_trace(mVcdFile, reg_256, "reg_256");
    sc_trace(mVcdFile, reg_262, "reg_262");
    sc_trace(mVcdFile, reg_268, "reg_268");
    sc_trace(mVcdFile, reg_274, "reg_274");
    sc_trace(mVcdFile, reg_280, "reg_280");
    sc_trace(mVcdFile, reg_286, "reg_286");
    sc_trace(mVcdFile, reg_292, "reg_292");
    sc_trace(mVcdFile, reg_298, "reg_298");
    sc_trace(mVcdFile, shift_reg_0_load_reg_428, "shift_reg_0_load_reg_428");
    sc_trace(mVcdFile, i_2_fu_314_p2, "i_2_fu_314_p2");
    sc_trace(mVcdFile, i_2_reg_437, "i_2_reg_437");
    sc_trace(mVcdFile, shift_reg_10_load_reg_442, "shift_reg_10_load_reg_442");
    sc_trace(mVcdFile, tmp_1_fu_389_p3, "tmp_1_fu_389_p3");
    sc_trace(mVcdFile, tmp_1_reg_447, "tmp_1_reg_447");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter0, "ap_block_state5_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_1_reg_447_pp0_iter1_reg, "tmp_1_reg_447_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_3_fu_402_p1, "tmp_3_fu_402_p1");
    sc_trace(mVcdFile, c_load_reg_460, "c_load_reg_460");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter0, "ap_block_state6_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, i_3_fu_406_p2, "i_3_fu_406_p2");
    sc_trace(mVcdFile, i_3_reg_465, "i_3_reg_465");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_6_fu_412_p2, "tmp_6_fu_412_p2");
    sc_trace(mVcdFile, tmp_6_reg_470, "tmp_6_reg_470");
    sc_trace(mVcdFile, acc_1_fu_417_p2, "acc_1_fu_417_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state5, "ap_condition_pp0_exit_iter0_state5");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, i_reg_124, "i_reg_124");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, shift_reg_load_phi_reg_136, "shift_reg_load_phi_reg_136");
    sc_trace(mVcdFile, ap_phi_mux_i_1_phi_fu_178_p4, "ap_phi_mux_i_1_phi_fu_178_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186, "ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186");
    sc_trace(mVcdFile, tmp_5_fu_397_p1, "tmp_5_fu_397_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_443, "ap_condition_443");
    sc_trace(mVcdFile, ap_condition_434, "ap_condition_434");
    sc_trace(mVcdFile, ap_condition_455, "ap_condition_455");
#endif

    }
    mHdltvinHandle.open("fir.hdltvin.dat");
    mHdltvoutHandle.open("fir.hdltvout.dat");
}

fir::~fir() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void fir::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_447_pp0_iter1_reg.read()))) {
        acc_reg_161 = acc_1_fu_417_p2.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        acc_reg_161 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state5.read() ^ ap_const_logic_1);
        } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_434.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,4,4>(tmp_3_fu_402_p1.read(), ap_const_lv4_0)) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = x.read();
        } else if (esl_seteq<1,1,1>(ap_condition_443.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = shift_reg_10_load_reg_442.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_9, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_298.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_8, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_250.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_7, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_256.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_6, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_262.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_5, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_268.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_4, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_274.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_3, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_280.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_2, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_286.read();
        } else if (esl_seteq<1,4,4>(ap_const_lv4_1, tmp_3_fu_402_p1.read())) {
            ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186 = reg_292.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_447.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1))) {
        i_1_reg_174 = i_3_reg_465.read();
    } else if ((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_1_reg_174 = ap_const_lv5_A;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_124 = i_2_reg_437.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_124 = ap_const_lv4_A;
    }
    if ((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_1)) {
            shift_reg_load_phi_reg_136 = shift_reg_0_load_reg_428.read();
        } else if (esl_seteq<1,1,1>(ap_condition_455.read(), ap_const_boolean_1)) {
            shift_reg_load_phi_reg_136 = shift_reg_9.read();
        } else if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_9)) {
            shift_reg_load_phi_reg_136 = shift_reg_8.read();
        } else if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_8)) {
            shift_reg_load_phi_reg_136 = shift_reg_7.read();
        } else if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_7)) {
            shift_reg_load_phi_reg_136 = shift_reg_6.read();
        } else if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_6)) {
            shift_reg_load_phi_reg_136 = shift_reg_5.read();
        } else if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_5)) {
            shift_reg_load_phi_reg_136 = shift_reg_4.read();
        } else if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_4)) {
            shift_reg_load_phi_reg_136 = shift_reg_3.read();
        } else if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_3)) {
            shift_reg_load_phi_reg_136 = shift_reg_2.read();
        } else if (esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_2)) {
            shift_reg_load_phi_reg_136 = shift_reg_1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        UnifiedRetVal_i_reg_186 = ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_186.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_447.read()))) {
        c_load_reg_460 = c_q0.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_2_reg_437 = i_2_fu_314_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_447.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        i_3_reg_465 = i_3_fu_406_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_9)) || (esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        reg_250 = shift_reg_8.read();
    }
    if (((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_8)))) {
        reg_256 = shift_reg_7.read();
    }
    if (((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_7)))) {
        reg_262 = shift_reg_6.read();
    }
    if (((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_6)))) {
        reg_268 = shift_reg_5.read();
    }
    if (((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_5)))) {
        reg_274 = shift_reg_4.read();
    }
    if (((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_4)))) {
        reg_280 = shift_reg_3.read();
    }
    if (((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_3)))) {
        reg_286 = shift_reg_2.read();
    }
    if (((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_2)))) {
        reg_292 = shift_reg_1.read();
    }
    if (((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_0) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_1) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_2) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_3) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_4) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_5) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_6) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_7) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_8) && 
  !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_9)))) {
        reg_298 = shift_reg_9.read();
    }
    if ((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        shift_reg_0 = x.read();
        shift_reg_10_load_reg_442 = shift_reg_10.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        shift_reg_0_load_reg_428 = shift_reg_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_1, i_reg_124.read()))) {
        shift_reg_1 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !esl_seteq<1,4,4>(ap_const_lv4_1, i_reg_124.read()) && !esl_seteq<1,4,4>(ap_const_lv4_2, i_reg_124.read()) && !esl_seteq<1,4,4>(ap_const_lv4_3, i_reg_124.read()) && !esl_seteq<1,4,4>(ap_const_lv4_4, i_reg_124.read()) && !esl_seteq<1,4,4>(ap_const_lv4_5, i_reg_124.read()) && !esl_seteq<1,4,4>(ap_const_lv4_6, i_reg_124.read()) && !esl_seteq<1,4,4>(ap_const_lv4_7, i_reg_124.read()) && !esl_seteq<1,4,4>(ap_const_lv4_8, i_reg_124.read()) && !esl_seteq<1,4,4>(ap_const_lv4_9, i_reg_124.read()))) {
        shift_reg_10 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_2, i_reg_124.read()))) {
        shift_reg_2 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_3, i_reg_124.read()))) {
        shift_reg_3 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_4, i_reg_124.read()))) {
        shift_reg_4 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_5, i_reg_124.read()))) {
        shift_reg_5 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_6, i_reg_124.read()))) {
        shift_reg_6 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_7, i_reg_124.read()))) {
        shift_reg_7 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_8, i_reg_124.read()))) {
        shift_reg_8 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,4,4>(ap_const_lv4_9, i_reg_124.read()))) {
        shift_reg_9 = shift_reg_load_phi_reg_136.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_447 = ap_phi_mux_i_1_phi_fu_178_p4.read().range(4, 4);
        tmp_1_reg_447_pp0_iter1_reg = tmp_1_reg_447.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_447.read()))) {
        tmp_6_reg_470 = tmp_6_fu_412_p2.read();
    }
}

void fir::thread_acc_1_fu_417_p2() {
    acc_1_fu_417_p2 = (!tmp_6_reg_470.read().is_01() || !acc_reg_161.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_reg_470.read()) + sc_biguint<32>(acc_reg_161.read()));
}

void fir::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[4];
}

void fir::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[5];
}

void fir::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fir::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fir::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fir::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fir::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[6];
}

void fir::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_state5_pp0_stage0_iter0() {
    ap_block_state5_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_state6_pp0_stage1_iter0() {
    ap_block_state6_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fir::thread_ap_condition_434() {
    ap_condition_434 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_389_p3.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1));
}

void fir::thread_ap_condition_443() {
    ap_condition_443 = (!esl_seteq<1,4,4>(tmp_3_fu_402_p1.read(), ap_const_lv4_0) && !esl_seteq<1,4,4>(ap_const_lv4_1, tmp_3_fu_402_p1.read()) && !esl_seteq<1,4,4>(ap_const_lv4_2, tmp_3_fu_402_p1.read()) && !esl_seteq<1,4,4>(ap_const_lv4_3, tmp_3_fu_402_p1.read()) && !esl_seteq<1,4,4>(ap_const_lv4_4, tmp_3_fu_402_p1.read()) && !esl_seteq<1,4,4>(ap_const_lv4_5, tmp_3_fu_402_p1.read()) && !esl_seteq<1,4,4>(ap_const_lv4_6, tmp_3_fu_402_p1.read()) && !esl_seteq<1,4,4>(ap_const_lv4_7, tmp_3_fu_402_p1.read()) && !esl_seteq<1,4,4>(ap_const_lv4_8, tmp_3_fu_402_p1.read()) && !esl_seteq<1,4,4>(ap_const_lv4_9, tmp_3_fu_402_p1.read()));
}

void fir::thread_ap_condition_455() {
    ap_condition_455 = (!esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_1) && !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_2) && !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_3) && !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_4) && !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_5) && !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_6) && !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_7) && !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_8) && !esl_seteq<1,4,4>(ap_phi_mux_i_phi_fu_128_p4.read(), ap_const_lv4_9));
}

void fir::thread_ap_condition_pp0_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(tmp_1_fu_389_p3.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_0;
    }
}

void fir::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fir::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void fir::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fir::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void fir::thread_ap_phi_mux_i_1_phi_fu_178_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_447.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_1_phi_fu_178_p4 = i_3_reg_465.read();
    } else {
        ap_phi_mux_i_1_phi_fu_178_p4 = i_1_reg_174.read();
    }
}

void fir::thread_ap_phi_mux_i_phi_fu_128_p4() {
    ap_phi_mux_i_phi_fu_128_p4 = i_reg_124.read();
}

void fir::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fir::thread_c_address0() {
    c_address0 =  (sc_lv<4>) (tmp_5_fu_397_p1.read());
}

void fir::thread_c_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void fir::thread_i_2_fu_314_p2() {
    i_2_fu_314_p2 = (!i_reg_124.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_124.read()) + sc_bigint<4>(ap_const_lv4_F));
}

void fir::thread_i_3_fu_406_p2() {
    i_3_fu_406_p2 = (!i_1_reg_174.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_reg_174.read()) + sc_bigint<5>(ap_const_lv5_1F));
}

void fir::thread_tmp_1_fu_389_p3() {
    tmp_1_fu_389_p3 = ap_phi_mux_i_1_phi_fu_178_p4.read().range(4, 4);
}

void fir::thread_tmp_3_fu_402_p1() {
    tmp_3_fu_402_p1 = ap_phi_mux_i_1_phi_fu_178_p4.read().range(4-1, 0);
}

void fir::thread_tmp_5_fu_397_p1() {
    tmp_5_fu_397_p1 = esl_zext<64,5>(ap_phi_mux_i_1_phi_fu_178_p4.read());
}

void fir::thread_tmp_6_fu_412_p2() {
    tmp_6_fu_412_p2 = (!c_load_reg_460.read().is_01() || !UnifiedRetVal_i_reg_186.read().is_01())? sc_lv<32>(): sc_bigint<32>(c_load_reg_460.read()) * sc_bigint<32>(UnifiedRetVal_i_reg_186.read());
}

void fir::thread_tmp_fu_308_p2() {
    tmp_fu_308_p2 = (!i_reg_124.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_124.read() == ap_const_lv4_0);
}

void fir::thread_y() {
    y = acc_reg_161.read();
}

void fir::thread_y_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        y_ap_vld = ap_const_logic_1;
    } else {
        y_ap_vld = ap_const_logic_0;
    }
}

void fir::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_fu_308_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(tmp_1_fu_389_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(tmp_1_fu_389_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

void fir::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y\" :  \"" << y.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_ap_vld\" :  \"" << y_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_address0\" :  \"" << c_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"c_ce0\" :  \"" << c_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"c_q0\" :  \"" << c_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x\" :  \"" << x.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

