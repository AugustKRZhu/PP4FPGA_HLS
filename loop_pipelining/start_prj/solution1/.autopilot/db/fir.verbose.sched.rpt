

================================================================
== Vivado HLS Report for 'fir'
================================================================
* Date:           Thu Nov 29 15:11:08 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        start_prj
* Solution:       solution1
* Product family: aartix7
* Target device:  xa7a12tcsg325-1q


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.470|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   56|   56|   56|   56|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- TDL     |   30|   30|         3|          -|          -|    10|    no    |
        |- MAC     |   23|   23|         4|          2|          2|    11|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 2, D = 4, States = { 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp)
	5  / (tmp)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
	9  / (tmp_1)
	6  / (!tmp_1)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	5  / true
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.66>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %y) nounwind, !map !7"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([11 x i32]* %c) nounwind, !map !13"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %x) nounwind, !map !19"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @fir_str) nounwind"   --->   Operation 13 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %x) nounwind"   --->   Operation 14 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%shift_reg_0_load = load i32* @shift_reg_0, align 4" [fir.c:80]   --->   Operation 15 'load' 'shift_reg_0_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.66ns)   --->   "br label %1" [fir.c:79]   --->   Operation 16 'br' <Predicate = true> <Delay = 1.66>

State 2 <SV = 1> <Delay = 1.94>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%i = phi i4 [ -6, %0 ], [ %i_2, %3 ]"   --->   Operation 17 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.44ns)   --->   "%tmp = icmp eq i4 %i, 0" [fir.c:79]   --->   Operation 18 'icmp' 'tmp' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind"   --->   Operation 19 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "br i1 %tmp, label %4, label %2" [fir.c:79]   --->   Operation 20 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str2) nounwind" [fir.c:79]   --->   Operation 21 'specloopname' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.77ns)   --->   "%i_2 = add i4 %i, -1" [fir.c:80]   --->   Operation 22 'add' 'i_2' <Predicate = (!tmp)> <Delay = 1.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.94ns)   --->   "switch i4 %i, label %branch20 [
    i4 1, label %branch11
    i4 2, label %branch12
    i4 3, label %branch13
    i4 4, label %branch14
    i4 5, label %branch15
    i4 6, label %branch16
    i4 7, label %branch17
    i4 -8, label %branch18
    i4 -7, label %branch19
  ]" [fir.c:80]   --->   Operation 23 'switch' <Predicate = (!tmp)> <Delay = 1.94>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%shift_reg_8_load = load i32* @shift_reg_8, align 4" [fir.c:80]   --->   Operation 24 'load' 'shift_reg_8_load' <Predicate = (!tmp & i == 9)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 25 'br' <Predicate = (!tmp & i == 9)> <Delay = 1.94>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%shift_reg_7_load = load i32* @shift_reg_7, align 4" [fir.c:80]   --->   Operation 26 'load' 'shift_reg_7_load' <Predicate = (!tmp & i == 8)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 27 'br' <Predicate = (!tmp & i == 8)> <Delay = 1.94>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%shift_reg_6_load = load i32* @shift_reg_6, align 4" [fir.c:80]   --->   Operation 28 'load' 'shift_reg_6_load' <Predicate = (!tmp & i == 7)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 29 'br' <Predicate = (!tmp & i == 7)> <Delay = 1.94>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%shift_reg_5_load = load i32* @shift_reg_5, align 4" [fir.c:80]   --->   Operation 30 'load' 'shift_reg_5_load' <Predicate = (!tmp & i == 6)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 31 'br' <Predicate = (!tmp & i == 6)> <Delay = 1.94>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%shift_reg_4_load = load i32* @shift_reg_4, align 4" [fir.c:80]   --->   Operation 32 'load' 'shift_reg_4_load' <Predicate = (!tmp & i == 5)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 33 'br' <Predicate = (!tmp & i == 5)> <Delay = 1.94>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%shift_reg_3_load = load i32* @shift_reg_3, align 4" [fir.c:80]   --->   Operation 34 'load' 'shift_reg_3_load' <Predicate = (!tmp & i == 4)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 35 'br' <Predicate = (!tmp & i == 4)> <Delay = 1.94>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%shift_reg_2_load = load i32* @shift_reg_2, align 4" [fir.c:80]   --->   Operation 36 'load' 'shift_reg_2_load' <Predicate = (!tmp & i == 3)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 37 'br' <Predicate = (!tmp & i == 3)> <Delay = 1.94>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%shift_reg_1_load = load i32* @shift_reg_1, align 4" [fir.c:80]   --->   Operation 38 'load' 'shift_reg_1_load' <Predicate = (!tmp & i == 2)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 39 'br' <Predicate = (!tmp & i == 2)> <Delay = 1.94>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%shift_reg_9_load = load i32* @shift_reg_9, align 4" [fir.c:80]   --->   Operation 40 'load' 'shift_reg_9_load' <Predicate = (!tmp & i != 1 & i != 2 & i != 3 & i != 4 & i != 5 & i != 6 & i != 7 & i != 8 & i != 9)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.94ns)   --->   "br label %branch11" [fir.c:80]   --->   Operation 41 'br' <Predicate = (!tmp & i != 1 & i != 2 & i != 3 & i != 4 & i != 5 & i != 6 & i != 7 & i != 8 & i != 9)> <Delay = 1.94>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "store i32 %x_read, i32* @shift_reg_0, align 16" [fir.c:82]   --->   Operation 42 'store' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%shift_reg_10_load = load i32* @shift_reg_10, align 4"   --->   Operation 43 'load' 'shift_reg_10_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%shift_reg_1_load_1 = load i32* @shift_reg_1, align 4"   --->   Operation 44 'load' 'shift_reg_1_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%shift_reg_2_load_1 = load i32* @shift_reg_2, align 4"   --->   Operation 45 'load' 'shift_reg_2_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%shift_reg_3_load_1 = load i32* @shift_reg_3, align 4"   --->   Operation 46 'load' 'shift_reg_3_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%shift_reg_4_load_1 = load i32* @shift_reg_4, align 4"   --->   Operation 47 'load' 'shift_reg_4_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%shift_reg_5_load_1 = load i32* @shift_reg_5, align 4"   --->   Operation 48 'load' 'shift_reg_5_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%shift_reg_6_load_1 = load i32* @shift_reg_6, align 4"   --->   Operation 49 'load' 'shift_reg_6_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%shift_reg_7_load_1 = load i32* @shift_reg_7, align 4"   --->   Operation 50 'load' 'shift_reg_7_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%shift_reg_8_load_1 = load i32* @shift_reg_8, align 4"   --->   Operation 51 'load' 'shift_reg_8_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%shift_reg_9_load_1 = load i32* @shift_reg_9, align 4"   --->   Operation 52 'load' 'shift_reg_9_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.66ns)   --->   "br label %5" [fir.c:84]   --->   Operation 53 'br' <Predicate = (tmp)> <Delay = 1.66>

State 3 <SV = 2> <Delay = 1.44>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%shift_reg_load_phi = phi i32 [ %shift_reg_1_load, %branch12 ], [ %shift_reg_2_load, %branch13 ], [ %shift_reg_3_load, %branch14 ], [ %shift_reg_4_load, %branch15 ], [ %shift_reg_5_load, %branch16 ], [ %shift_reg_6_load, %branch17 ], [ %shift_reg_7_load, %branch18 ], [ %shift_reg_8_load, %branch19 ], [ %shift_reg_9_load, %branch20 ], [ %shift_reg_0_load, %2 ]" [fir.c:80]   --->   Operation 54 'phi' 'shift_reg_load_phi' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.44ns)   --->   "switch i4 %i, label %branch10 [
    i4 1, label %branch1
    i4 2, label %branch2
    i4 3, label %branch3
    i4 4, label %branch4
    i4 5, label %branch5
    i4 6, label %branch6
    i4 7, label %branch7
    i4 -8, label %branch8
    i4 -7, label %branch9
  ]" [fir.c:80]   --->   Operation 55 'switch' <Predicate = true> <Delay = 1.44>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_9, align 4" [fir.c:80]   --->   Operation 56 'store' <Predicate = (i == 9)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 57 'br' <Predicate = (i == 9)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_8, align 4" [fir.c:80]   --->   Operation 58 'store' <Predicate = (i == 8)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 59 'br' <Predicate = (i == 8)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_7, align 4" [fir.c:80]   --->   Operation 60 'store' <Predicate = (i == 7)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 61 'br' <Predicate = (i == 7)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_6, align 4" [fir.c:80]   --->   Operation 62 'store' <Predicate = (i == 6)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 63 'br' <Predicate = (i == 6)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_5, align 4" [fir.c:80]   --->   Operation 64 'store' <Predicate = (i == 5)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 65 'br' <Predicate = (i == 5)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_4, align 4" [fir.c:80]   --->   Operation 66 'store' <Predicate = (i == 4)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 67 'br' <Predicate = (i == 4)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_3, align 4" [fir.c:80]   --->   Operation 68 'store' <Predicate = (i == 3)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 69 'br' <Predicate = (i == 3)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_2, align 4" [fir.c:80]   --->   Operation 70 'store' <Predicate = (i == 2)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 71 'br' <Predicate = (i == 2)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_1, align 4" [fir.c:80]   --->   Operation 72 'store' <Predicate = (i == 1)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 73 'br' <Predicate = (i == 1)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "store i32 %shift_reg_load_phi, i32* @shift_reg_10, align 4" [fir.c:80]   --->   Operation 74 'store' <Predicate = (i != 1 & i != 2 & i != 3 & i != 4 & i != 5 & i != 6 & i != 7 & i != 8 & i != 9)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "br label %3" [fir.c:80]   --->   Operation 75 'br' <Predicate = (i != 1 & i != 2 & i != 3 & i != 4 & i != 5 & i != 6 & i != 7 & i != 8 & i != 9)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "br label %1" [fir.c:79]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 2> <Delay = 2.15>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%acc = phi i32 [ 0, %4 ], [ %acc_1, %aesl_mux_load.11i32P.i4.exit ]"   --->   Operation 77 'phi' 'acc' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%i_1 = phi i5 [ 10, %4 ], [ %i_3, %aesl_mux_load.11i32P.i4.exit ]"   --->   Operation 78 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %i_1, i32 4)" [fir.c:84]   --->   Operation 79 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 11, i64 11, i64 11) nounwind"   --->   Operation 80 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %7, label %6" [fir.c:84]   --->   Operation 81 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_5 = zext i5 %i_1 to i64" [fir.c:86]   --->   Operation 82 'zext' 'tmp_5' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_3 = trunc i5 %i_1 to i4" [fir.c:84]   --->   Operation 83 'trunc' 'tmp_3' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (1.97ns)   --->   "switch i4 %tmp_3, label %case10.i [
    i4 0, label %aesl_mux_load.11i32P.i4.exit
    i4 1, label %case1.i
    i4 2, label %case2.i
    i4 3, label %case3.i
    i4 4, label %case4.i
    i4 5, label %case5.i
    i4 6, label %case6.i
    i4 7, label %case7.i
    i4 -8, label %case8.i
    i4 -7, label %case9.i
  ]" [fir.c:84]   --->   Operation 84 'switch' <Predicate = (!tmp_1)> <Delay = 1.97>
ST_5 : Operation 85 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 85 'br' <Predicate = (!tmp_1 & tmp_3 == 9)> <Delay = 1.97>
ST_5 : Operation 86 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 86 'br' <Predicate = (!tmp_1 & tmp_3 == 8)> <Delay = 1.97>
ST_5 : Operation 87 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 87 'br' <Predicate = (!tmp_1 & tmp_3 == 7)> <Delay = 1.97>
ST_5 : Operation 88 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 88 'br' <Predicate = (!tmp_1 & tmp_3 == 6)> <Delay = 1.97>
ST_5 : Operation 89 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 89 'br' <Predicate = (!tmp_1 & tmp_3 == 5)> <Delay = 1.97>
ST_5 : Operation 90 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 90 'br' <Predicate = (!tmp_1 & tmp_3 == 4)> <Delay = 1.97>
ST_5 : Operation 91 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 91 'br' <Predicate = (!tmp_1 & tmp_3 == 3)> <Delay = 1.97>
ST_5 : Operation 92 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 92 'br' <Predicate = (!tmp_1 & tmp_3 == 2)> <Delay = 1.97>
ST_5 : Operation 93 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 93 'br' <Predicate = (!tmp_1 & tmp_3 == 1)> <Delay = 1.97>
ST_5 : Operation 94 [1/1] (1.97ns)   --->   "br label %aesl_mux_load.11i32P.i4.exit"   --->   Operation 94 'br' <Predicate = (!tmp_1 & tmp_3 != 0 & tmp_3 != 1 & tmp_3 != 2 & tmp_3 != 3 & tmp_3 != 4 & tmp_3 != 5 & tmp_3 != 6 & tmp_3 != 7 & tmp_3 != 8 & tmp_3 != 9)> <Delay = 1.97>
ST_5 : Operation 95 [1/1] (0.00ns)   --->   "%c_addr = getelementptr [11 x i32]* %c, i64 0, i64 %tmp_5" [fir.c:86]   --->   Operation 95 'getelementptr' 'c_addr' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_5 : Operation 96 [2/2] (2.15ns)   --->   "%c_load = load i32* %c_addr, align 4" [fir.c:86]   --->   Operation 96 'load' 'c_load' <Predicate = (!tmp_1)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>

State 6 <SV = 3> <Delay = 2.15>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "%UnifiedRetVal_i = phi i32 [ %shift_reg_1_load_1, %case1.i ], [ %shift_reg_2_load_1, %case2.i ], [ %shift_reg_3_load_1, %case3.i ], [ %shift_reg_4_load_1, %case4.i ], [ %shift_reg_5_load_1, %case5.i ], [ %shift_reg_6_load_1, %case6.i ], [ %shift_reg_7_load_1, %case7.i ], [ %shift_reg_8_load_1, %case8.i ], [ %shift_reg_9_load_1, %case9.i ], [ %shift_reg_10_load, %case10.i ], [ %x_read, %6 ]"   --->   Operation 97 'phi' 'UnifiedRetVal_i' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_6 : Operation 98 [1/2] (2.15ns)   --->   "%c_load = load i32* %c_addr, align 4" [fir.c:86]   --->   Operation 98 'load' 'c_load' <Predicate = (!tmp_1)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_6 : Operation 99 [1/1] (1.86ns)   --->   "%i_3 = add i5 %i_1, -1" [fir.c:84]   --->   Operation 99 'add' 'i_3' <Predicate = (!tmp_1)> <Delay = 1.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 4> <Delay = 8.47>
ST_7 : Operation 100 [1/1] (8.47ns)   --->   "%tmp_6 = mul nsw i32 %c_load, %UnifiedRetVal_i" [fir.c:86]   --->   Operation 100 'mul' 'tmp_6' <Predicate = (!tmp_1)> <Delay = 8.47> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 5> <Delay = 2.70>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str3) nounwind" [fir.c:84]   --->   Operation 101 'specloopname' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str3) nounwind" [fir.c:84]   --->   Operation 102 'specregionbegin' 'tmp_2' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [fir.c:85]   --->   Operation 103 'specpipeline' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (2.70ns)   --->   "%acc_1 = add nsw i32 %tmp_6, %acc" [fir.c:86]   --->   Operation 104 'add' 'acc_1' <Predicate = (!tmp_1)> <Delay = 2.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str3, i32 %tmp_2) nounwind" [fir.c:87]   --->   Operation 105 'specregionend' 'empty_3' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "br label %5" [fir.c:84]   --->   Operation 106 'br' <Predicate = (!tmp_1)> <Delay = 0.00>

State 9 <SV = 3> <Delay = 0.00>
ST_9 : Operation 107 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %y, i32 %acc) nounwind" [fir.c:88]   --->   Operation 107 'write' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 108 [1/1] (0.00ns)   --->   "ret void" [fir.c:89]   --->   Operation 108 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.66ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', fir.c:80) [23]  (1.66 ns)

 <State 2>: 1.94ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', fir.c:80) [23]  (0 ns)
	multiplexor before 'phi' operation ('shift_reg_load_phi', fir.c:80) with incoming values : ('shift_reg_0_load', fir.c:80) ('shift_reg_8_load', fir.c:80) ('shift_reg_7_load', fir.c:80) ('shift_reg_6_load', fir.c:80) ('shift_reg_5_load', fir.c:80) ('shift_reg_4_load', fir.c:80) ('shift_reg_3_load', fir.c:80) ('shift_reg_2_load', fir.c:80) ('shift_reg_1_load', fir.c:80) ('shift_reg_9_load', fir.c:80) [59]  (1.94 ns)

 <State 3>: 1.45ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 2.15ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', fir.c:84) [108]  (0 ns)
	'getelementptr' operation ('c_addr', fir.c:86) [141]  (0 ns)
	'load' operation ('c_load', fir.c:86) on array 'c' [142]  (2.15 ns)

 <State 6>: 2.15ns
The critical path consists of the following:
	'load' operation ('c_load', fir.c:86) on array 'c' [142]  (2.15 ns)

 <State 7>: 8.47ns
The critical path consists of the following:
	'mul' operation ('tmp_6', fir.c:86) [143]  (8.47 ns)

 <State 8>: 2.7ns
The critical path consists of the following:
	'add' operation ('acc', fir.c:86) [144]  (2.7 ns)

 <State 9>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
